(()=>{var t={80:t=>{(()=>{"use strict";var e={d:(t,r)=>{for(var n in r)e.o(r,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:r[n]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},r={};e.r(r),e.d(r,{createTableRender:()=>I,default:()=>H,expr2xy:()=>l,xy2expr:()=>s});var n="ABCDEFGHIJKLMNOPQRSTUVWXYZ";function i(t){return n.charAt(t%n.length)}function o(t){for(var e=[];t>=0;)e.push(i(t)),t=parseInt(t/n.length+"",10)-1;return e.reverse().join("")}function a(t){for(var e=0,r=0;r<t.length;r++)e=26*e+t.charCodeAt(r)-64;return e-1}function l(t){for(var e="",r="",n=0;n<t.length;n+=1)t.charAt(n)>="0"&&t.charAt(n)<="9"?r+=t.charAt(n):e+=t.charAt(n).toUpperCase();return[a(e),parseInt(r,10)-1]}function s(t,e){return"".concat(o(t)).concat(e+1)}var u=function(){function t(e,r,n,i){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.startRow=e,this.startCol=r,this.endRow=n,this.endCol=i}var e,r;return e=t,(r=[{key:"start",get:function(){return[this.startRow,this.startCol]}},{key:"end",get:function(){return[this.endRow,this.endCol]}},{key:"rows",get:function(){return this.endRow-this.startRow}},{key:"cols",get:function(){return this.endCol-this.startCol}},{key:"containsRow",value:function(t){return this.startRow<=t&&t<=this.endRow}},{key:"containsCol",value:function(t){return this.startCol<=t&&t<=this.endCol}},{key:"contains",value:function(t,e){return this.containsRow(t)&&this.containsCol(e)}},{key:"within",value:function(t){return this.startRow>=t.startRow&&this.startCol>=t.startCol&&this.endRow<=t.endRow&&this.endCol<=t.endCol}},{key:"intersects",value:function(t){return this.startRow<=t.endRow&&this.startCol<=t.endCol&&t.startRow<=this.endRow&&t.startCol<=this.endCol}},{key:"union",value:function(e){return new t(e.startRow<this.startRow?e.startRow:this.startRow,e.startCol<this.startCol?e.startCol:this.startCol,e.endRow>this.endRow?e.endRow:this.endRow,e.endCol>this.endCol?e.endCol:this.endCol)}},{key:"eachRow",value:function(t){for(var e=this.startRow;e<=this.endRow;e+=1)t(e);return this}},{key:"eachCol",value:function(t){for(var e=this.startCol;e<=this.endCol;e+=1)t(e);return this}},{key:"each",value:function(t){var e=this;return this.eachRow((function(r){e.eachCol((function(e){return t(r,e)}))})),this}},{key:"clone",value:function(){return new t(this.startRow,this.startCol,this.endRow,this.endCol)}}])&&function(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function c(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function h(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}var f=function(){function t(e,r,n,i,o){var a=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),h(this,"width",0),h(this,"height",0),h(this,"rowMap",new Map),h(this,"colMap",new Map),this.range=e,this.x=r,this.y=n,this.rowHeight=i,this.colWidth=o,e.eachRow((function(t){var e=i(t);e>0&&(a.rowMap.set(t,{y:a.height,height:e}),a.height+=e)})),e.eachCol((function(t){var e=o(t);e>0&&(a.colMap.set(t,{x:a.width,width:e}),a.width+=e)}))}var e,r,n;return e=t,n=[{key:"create",value:function(e,r,n,i,o,a,l,s){return new t(new u(e,r,n,i),o,a,l,s)}}],(r=[{key:"eachRow",value:function(t){var e=this;this.range.eachRow((function(r){var n=e.rowMap.get(r)||{y:0,height:0},i=n.y,o=n.height;o>0&&t(r,i,o)}))}},{key:"eachCol",value:function(t){var e=this;this.range.eachCol((function(r){var n=e.colMap.get(r)||{x:0,width:0},i=n.x,o=n.width;o>0&&t(r,i,o)}))}},{key:"each",value:function(t){var e=this;this.eachRow((function(r,n,i){e.eachCol((function(e,o,a){t(r,e,{x:o,y:n,width:a,height:i})}))}))}},{key:"rect",value:function(t){var e,r,n=this,i=this.rowMap,o=this.colMap,a=this.range,l={x:0,y:0,width:0,height:0};return t.startRow>=a.startRow&&(l.y=(null===(e=i.get(t.startRow))||void 0===e?void 0:e.y)||0),t.eachRow((function(t){var e=n.rowHeight(t);e>0&&(t<a.startRow&&(l.y-=e),l.height+=e)})),t.startCol>=a.startCol&&(l.x=(null===(r=o.get(t.startCol))||void 0===r?void 0:r.x)||0),t.eachCol((function(t){var e=n.colWidth(t);e>0&&(t<a.startCol&&(l.x-=e),l.width+=e)})),l}}])&&c(e.prototype,r),n&&c(e,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function y(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var d=function(){function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.target=e;var n=e.getContext("2d");if(!n)throw new Error("getContext(2d) is null");this._ctx=n,this._scale=r,this._target=e}var e,r;return e=t,(r=[{key:"size",value:function(t,e){var r=this._target,n=this._scale;r.style.width="".concat(t,"px"),r.style.height="".concat(e,"px");var i=window.devicePixelRatio;return r.width=Math.floor(t*i),r.height=Math.floor(e*i),this._ctx.scale(i*n,i*n),this}},{key:"attr",value:function(t,e){var r=this;return e?(this._ctx[t]=e,this):"string"==typeof t?this._ctx[t]:(Object.entries(t).forEach((function(t){var e,n=function(t){if(Array.isArray(t))return t}(e=t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,i,o=[],a=!0,l=!1;try{for(r=r.call(t);!(a=(n=r.next()).done)&&(o.push(n.value),2!==o.length);a=!0);}catch(t){l=!0,i=t}finally{try{a||null==r.return||r.return()}finally{if(l)throw i}}return o}}(e)||function(t,e){if(t){if("string"==typeof t)return y(t,2);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?y(t,2):void 0}}(e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),i=n[0],o=n[1];null!=o&&(r._ctx[i]=o)})),this)}},{key:"measureTextWidth",value:function(t){return this.measureText(t).width}},{key:"line",value:function(t,e,r,n,i){return i&&(this.attr({lineWidth:1,strokeStyle:i.color}),"medium"===i.type?this.attr({lineWidth:2}):"thick"===i.type?this.attr({lineWidth:3}):"dashed"===i.type?this.setLineDash([3,2]):"dotted"===i.type&&this.setLineDash([1,1])),this.moveTo(t,e).lineTo(r,n).stroke(),this}},{key:"clearRect",value:function(t,e,r,n){return this._ctx.clearRect(t,e,r,n),this}},{key:"fillRect",value:function(t,e,r,n){return this._ctx.fillRect(t,e,r,n),this}},{key:"strokeRect",value:function(t,e,r,n){return this._ctx.strokeRect(t,e,r,n),this}},{key:"fillText",value:function(t,e,r,n){return this._ctx.fillText(t,e,r,n),this}},{key:"strokeText",value:function(t,e,r,n){return this._ctx.strokeText(t,e,r,n),this}},{key:"measureText",value:function(t){return this._ctx.measureText(t)}},{key:"getLineDash",value:function(){return this._ctx.getLineDash()}},{key:"setLineDash",value:function(t){return this._ctx.setLineDash(t),this}},{key:"createLinearGradient",value:function(t,e,r,n){return this._ctx.createLinearGradient(t,e,r,n)}},{key:"createRadialGradient",value:function(t,e,r,n,i,o){return this._ctx.createRadialGradient(t,e,r,n,i,o)}},{key:"createPattern",value:function(t,e){return this._ctx.createPattern(t,e)}},{key:"beginPath",value:function(){return this._ctx.beginPath(),this}},{key:"closePath",value:function(){return this._ctx.closePath(),this}},{key:"moveTo",value:function(t,e){return this._ctx.moveTo(t,e),this}},{key:"lineTo",value:function(t,e){return this._ctx.lineTo(t,e),this}},{key:"bezierCurveTo",value:function(t,e,r,n,i,o){return this.bezierCurveTo(t,e,r,n,i,o),this}},{key:"quadraticCurveTo",value:function(t,e,r,n){return this.quadraticCurveTo(t,e,r,n),this}},{key:"arc",value:function(t,e,r,n,i,o){return this._ctx.arc(t,e,r,n,i,o),this}},{key:"arcTo",value:function(t,e,r,n,i){return this._ctx.arcTo(t,e,r,n,i),this}},{key:"ellipse",value:function(t,e,r,n,i,o,a,l){return this._ctx.ellipse(t,e,r,n,i,o,a,l),this}},{key:"rect",value:function(t,e,r,n){return this._ctx.rect(t,e,r,n),this}},{key:"fill",value:function(t){return this._ctx.fill(t),this}},{key:"stroke",value:function(){return this._ctx.stroke(),this}},{key:"clip",value:function(t){return this._ctx.clip(t),this}},{key:"isPointInPath",value:function(t,e,r){return this._ctx.isPointInPath(t,e,r)}},{key:"isPointInStroke",value:function(t,e){return this._ctx.isPointInStroke(t,e)}},{key:"getTransform",value:function(){return this._ctx.getTransform()}},{key:"rotate",value:function(t){return this._ctx.rotate(t),this}},{key:"scale",value:function(t,e){return this._ctx.scale(t,e),this}},{key:"translate",value:function(t,e){return this._ctx.translate(t,e),this}},{key:"setTransform",value:function(t,e,r,n,i,o){return this._ctx.setTransform(t,e,r,n,i,o),this}},{key:"drawImage",value:function(t,e,r){return this._ctx.drawImage(t,e,r),this}},{key:"createImageData",value:function(t,e){return this._ctx.createImageData(t,e)}},{key:"getImageData",value:function(t,e,r,n){return this._ctx.getImageData(t,e,r,n)}},{key:"putImageData",value:function(t,e,r){return this._ctx.putImageData(t,e,r),this}},{key:"save",value:function(){return this._ctx.save(),this}},{key:"restore",value:function(){return this._ctx.restore(),this}}])&&function(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function v(t,e){if(t){if("string"==typeof t)return w(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?w(t,e):void 0}}function w(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function p(t,e,r,n){if(t&&e){var i="";return r&&(i+="italic "),n&&(i+="bold "),"".concat(i," ").concat(e,"pt ").concat(t)}}function g(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,i,o=[],a=!0,l=!1;try{for(r=r.call(t);!(a=(n=r.next()).done)&&(o.push(n.value),!e||o.length!==e);a=!0);}catch(t){l=!0,i=t}finally{try{a||null==r.return||r.return()}finally{if(l)throw i}}return o}}(t,e)||function(t,e){if(t){if("string"==typeof t)return _(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function b(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function m(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?b(Object(r),!0).forEach((function(e){k(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):b(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function k(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function x(t,e,r){var n=e.width,i=e.color;n>0&&(t.save().beginPath().attr({lineWidth:n,strokeStyle:i}),r(),t.restore())}function S(t,e,r,n,i){var o="",a=n;e&&("string"==typeof e||"number"==typeof e?o="".concat(e):(o=(e.value||"")+"",e.style&&(a=m(m({},n),i[e.style])))),function(t,e,r,n){var i=n.border,o=n.fontSize,a=n.fontName,l=n.bold,s=n.italic,u=n.color,c=n.bgcolor,h=n.align,f=n.valign,y=n.underline,d=n.strikethrough,g=n.rotate,_=n.textwrap,b=n.padding;if(t.save().beginPath().translate(r.x,r.y),i){var m=i.top,k=i.right,x=i.bottom,S=i.left;t.save(),m&&t.line(0,0,r.width,0,{type:m[0],color:m[1]}),k&&t.line(r.width,0,r.width,r.height,{type:k[0],color:k[1]}),x&&t.line(0,r.height,r.width,r.height,{type:x[0],color:x[1]}),S&&t.line(0,0,0,r.height,{type:S[0],color:S[1]}),t.restore()}t.attr("fillStyle",c).rect(.5,.5,r.width-1,r.height-1).clip().fill(),t.save().beginPath().attr({textAlign:h,textBaseline:f,font:p(a,o,s,l),fillStyle:u}),g&&g>0&&t.rotate(g*(Math.PI/180));var C,j=function(t){if(Array.isArray(t))return t}(C=b||[5,5])||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,i,o=[],a=!0,l=!1;try{for(r=r.call(t);!(a=(n=r.next()).done)&&(o.push(n.value),2!==o.length);a=!0);}catch(t){l=!0,i=t}finally{try{a||null==r.return||r.return()}finally{if(l)throw i}}return o}}(C)||v(C,2)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),O=j[0],R=j[1],P=function(t,e,r){switch(t){case"left":return r;case"center":return e/2;case"right":return e-r;default:return 0}}(h,r.width,O),A=e.split("\n"),T=r.width-2*O,H=[];A.forEach((function(e){var r=t.measureTextWidth(e);if(_&&r>T){for(var n={w:0,len:0,start:0},i=0;i<e.length;i+=1)n.w>T&&(H.push(e.substr(n.start,n.len)),n={w:0,len:0,start:i}),n.len+=1,n.w+=t.measureTextWidth(e[i])+1;n.len>0&&H.push(e.substr(n.start,n.len))}else H.push(e)}));var I=1.425*o,E=(H.length-1)*I,M=[];y&&M.push("underline"),d&&M.push("strikethrough");var z=function(t,e,r,n){switch(t){case"top":return n;case"middle":return e/2-r/2;case"bottom":return e-n-r;default:return 0}}(f,r.height,E,R);H.forEach((function(e){var r=t.measureTextWidth(e);t.fillText(e,P,z),M.forEach((function(e){t.line.apply(t,function(t){return function(t){if(Array.isArray(t))return w(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||v(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(function(t,e,r,n,i,o,a){var l=0;"underline"===t?"top"===r?l=-a:"middle"===r&&(l=-a/2):"strikethrough"===t&&("top"===r?l=-a/2:"bottom"===r&&(l=a/2));var s=0;return"center"===e?s=o/2:"right"===e&&(s=o),[n-s,i-l,n-s+o,i-l]}(e,h,f,P,z,r,o)))})),z+=I})),t.restore(),t.restore()}(t,o,r,a)}function C(t,e,r,n,i,o,a,s,c){if(e){t.save().translate(e.x,e.y),function(t,e,r){x(t,r,(function(){e.eachRow((function(r,n,i){t.line(0,n+i,e.width,n+i)})),e.eachCol((function(r,n,i){t.line(n+i,0,n+i,e.height)}))}))}(t,e,i),t.rect(0,0,e.width,e.height).clip();var h=function(t,e){var r=m({},n);if(s){var i=s(t);i&&i.style&&Object.assign(r,o[i.style])}if(c){var a=c(e);a&&a.style&&Object.assign(r,o[a.style])}return r};e.each((function(e,n,i){S(t,r(e,n),i,h(e,n),o)})),a&&(y=function(n){n.intersects(e.range)&&S(t,r(n.startRow,n.startCol),e.rect(n),h(n.startRow,n.startCol),o)},(f=a)&&f.length>0&&f.forEach((function(t){y(function(t){var e=t.split(":"),r=l(e[0]),n=l(e[1]);return new u(r[1],r[0],n[1],n[0])}(t))}))),t.restore()}var f,y}function j(t,e,r){C(t,e,r._cell,r._cellStyle,r._lineStyle,r._styles,r._merges,r._row,r._col)}function O(t,e,r){var n=r._rowHeader,i=n.cell,o=n.width,a=n.merges;n.cols,o>0&&C(t,e,i,r._headerCellStyle,r._headerLineStyle,r._styles,a)}function R(t,e,r){var n=r._colHeader,i=n.cell,o=n.height,a=n.merges;n.rows,o>0&&C(t,e,i,r._headerCellStyle,r._headerLineStyle,r._styles,a)}function P(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var A=function(t,e,r){return Object.defineProperty(t,"prototype",{writable:!1}),t}((function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t);var r,n=[e._rowHeader.width,e._colHeader.height],i=n[0],o=n[1],a=function(t){if(Array.isArray(t))return t}(r=e._freeze)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,i,o=[],a=!0,l=!1;try{for(r=r.call(t);!(a=(n=r.next()).done)&&(o.push(n.value),2!==o.length);a=!0);}catch(t){l=!0,i=t}finally{try{a||null==r.return||r.return()}finally{if(l)throw i}}return o}}(r)||function(t,e){if(t){if("string"==typeof t)return P(t,2);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?P(t,2):void 0}}(r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),l=a[0],s=a[1],u=function(t){var r=e._row(t);return null!=r&&r.hide?0:(null==r?void 0:r.height)||e._rowHeight};Object.assign({height:e._rowHeight});for(var c=function(t){var r=e._col(t);return null!=r&&r.hide?0:(null==r?void 0:r.width)||e._colWidth},h=e._startRow,y=e._startCol,d=e._rows,v=e._cols,w=f.create(h,y,s-1,l-1,i,o,u,c),p=s+e._scrollRows,g=l+e._scrollCols,_=w.height,b=p;_<e._height&&b<d;)_+=u(b),b+=1;for(var m=w.width,k=g;m<e._width&&k<v;)m+=c(k),k+=1;var x=f.create(p,g,b-1,k-1,i+w.width,o+w.height,u,c),S=f.create(h,g,s-1,k-1,i+w.width,o,u,c),C=f.create(p,y,b-1,l-1,i,o+w.height,u,c);this.areas=[S,w,C,x];var j=e._rowHeader,O=e._colHeader,R=function(){return O.rowHeight},A=function(){return j.colWidth};this.headerAreas=[f.create(0,S.range.startCol,O.rows-1,S.range.endCol,x.x,0,R,c),f.create(0,w.range.startCol,O.rows-1,w.range.endCol,w.x,0,R,c),f.create(w.range.startRow,0,w.range.endRow,j.cols-1,0,w.y,u,A),f.create(C.range.startRow,0,C.range.endRow,j.cols-1,0,x.y,u,A)]}));function T(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}var H=function(){function t(e,r,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),T(this,"_width",0),T(this,"_height",0),T(this,"_scale",1),T(this,"_rows",100),T(this,"_cols",26),T(this,"_rowHeight",25),T(this,"_colWidth",100),T(this,"_startRow",0),T(this,"_startCol",0),T(this,"_scrollRows",0),T(this,"_scrollCols",0),T(this,"_row",(function(){})),T(this,"_col",(function(){})),T(this,"_cell",(function(){})),T(this,"_merges",[]),T(this,"_styles",[]),T(this,"_lineStyle",{width:1,color:"#e6e6e6"}),T(this,"_cellStyle",{bgcolor:"#ffffff",align:"left",valign:"middle",textwrap:!0,underline:!1,strikethrough:!1,color:"#0a0a0a",bold:!1,italic:!1,rotate:0,fontSize:9,fontName:"Source Sans Pro"}),T(this,"_rowHeader",{width:60,cols:1,cell:function(t,e){return t+1},get colWidth(){return this.width/this.cols}}),T(this,"_colHeader",{height:25,rows:1,cell:function(t,e){return o(e)},get rowHeight(){return this.height/this.rows}}),T(this,"_headerLineStyle",{width:1,color:"#e6e6e6"}),T(this,"_headerCellStyle",{bgcolor:"#f4f5f8",align:"center",valign:"middle",textwrap:!0,underline:!1,strikethrough:!1,color:"#585757",bold:!1,italic:!1,rotate:0,fontSize:9,fontName:"Source Sans Pro"}),T(this,"_freeze",[0,0]),T(this,"_freezeLineStyle",{width:2,color:"#d8d8d8"}),T(this,"_viewport",null);var i="string"==typeof e?document.querySelector(e):e;if(!i)throw new Error("target error");this._target=i,this._width=r,this._height=n}var e,r;return e=t,(r=[{key:"render",value:function(){return this._viewport=new A(this),function(t){var e=t._width,r=t._height,n=t._target,i=t._scale,o=t._viewport,a=t._freeze,l=t._rowHeader,s=t._colHeader;if(o){var u=new d(n,i);u.size(e,r);var c=g(o.areas,4),h=c[0],y=c[1],v=c[2],w=c[3],p=g(o.headerAreas,4),_=p[0],b=p[1],m=p[2],k=p[3];j(u,w,t),j(u,h,t),R(u,_,t),j(u,v,t),O(u,k,t),j(u,y,t),R(u,b,t),O(u,m,t);var S=g(a,2),P=S[0],A=S[1];(P>0||A>0)&&x(u,t._freezeLineStyle,(function(){P>0&&u.line(0,w.y,e,w.y),A>0&&u.line(w.x,0,w.x,r)}));var T=y.x,H=y.y;if(T>0&&H>0){var I=f.create(0,0,0,0,0,0,(function(){return s.height}),(function(){return l.width}));C(u,I,(function(){return""}),t._headerCellStyle,t._headerLineStyle,t._styles)}}}(this),this}},{key:"width",value:function(t){return this._width=t,this}},{key:"height",value:function(t){return this._height=t,this}},{key:"scale",value:function(t){return this._scale=t,this}},{key:"rows",value:function(t){return this._rows=t,this}},{key:"cols",value:function(t){return this._cols=t,this}},{key:"rowHeight",value:function(t){return this._rowHeight=t,this}},{key:"colWidth",value:function(t){return this._colWidth=t,this}},{key:"startRow",value:function(t){return this._startRow=t,this}},{key:"startCol",value:function(t){return this._startCol=t,this}},{key:"scrollRows",value:function(t){return this._scrollRows=t,this}},{key:"scrollCols",value:function(t){return this._scrollCols=t,this}},{key:"row",value:function(t){return this._row=t,this}},{key:"col",value:function(t){return this._col=t,this}},{key:"cell",value:function(t){return this._cell=t,this}},{key:"merges",value:function(t){return t&&(this._merges=t),this}},{key:"styles",value:function(t){return t&&(this._styles=t),this}},{key:"lineStyle",value:function(t){return Object.assign(this._lineStyle,t),this}},{key:"cellStyle",value:function(t){return Object.assign(this._cellStyle,t),this}},{key:"rowHeader",value:function(t){return t&&Object.assign(this._rowHeader,t),this}},{key:"colHeader",value:function(t){return t&&Object.assign(this._colHeader,t),this}},{key:"headerLineStyle",value:function(t){return Object.assign(this._headerLineStyle,t),this}},{key:"headerCellStyle",value:function(t){return t&&Object.assign(this._headerCellStyle,t),this}},{key:"freeze",value:function(t){return t&&(this._freeze=l(t)),this}},{key:"freezeLineStyle",value:function(t){return Object.assign(this._freezeLineStyle,t),this}}])&&function(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function I(t,e,r){return new H(t,e,r)}t.exports=r})()}},e={};function r(n){var i=e[n];if(void 0!==i)return i.exports;var o=e[n]={exports:{}};return t[n](o,o.exports,r),o.exports}r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var n={};(()=>{"use strict";r.r(n),r.d(n,{createTable:()=>A,default:()=>R});var t=r(80),e=r.n(t);function i(t,e,r){for(var n=0,i=t;i<e;i+=1)n+=r(i);return n}function o(t,e){var r=t.cols,n=t.colWidth;return r&&r[e]||{width:n}}function a(t){return i(0,t.cols.len,(function(e){return o(t,e).width}))}function l(t,e){var r=t.rows,n=t.rowHeight;return r&&r[e]||{height:n}}function s(t){return i(0,t.rows.len,(function(e){return l(t,e).height}))}function u(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function c(t,e){if(t){if("string"==typeof t)return h(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?h(t,e):void 0}}function h(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function f(t){if(Array.isArray(t))return t}function y(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function d(){for(var t=document.createDocumentFragment(),e=arguments.length,r=new Array(e),n=0;n<e;n++)r[n]=arguments[n];return r.forEach((function(e){var r;r=e instanceof v?e._:"string"==typeof e?document.createTextNode(e):e,t.appendChild(r)})),t}var v=function(){function t(e,r){var n,i,o,a,l;if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),n=this,i="_data",o=new Map,i in n?Object.defineProperty(n,i,{value:o,enumerable:!0,configurable:!0,writable:!0}):n[i]=o,this._=e instanceof Node?e:document.createElement(e),r)if("string"==typeof r)this._.className=r;else if(Array.isArray(r))this._.className=r.join(" ");else for(var s=0,h=Object.entries(r);s<h.length;s++){var y=(a=h[s],l=2,f(a)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,i,o=[],a=!0,l=!1;try{for(r=r.call(t);!(a=(n=r.next()).done)&&(o.push(n.value),!e||o.length!==e);a=!0);}catch(t){l=!0,i=t}finally{try{a||null==r.return||r.return()}finally{if(l)throw i}}return o}}(a,l)||c(a,l)||u()),d=y[0];y[1]&&this._.classList.add(d)}}var e,r;return e=t,r=[{key:"data",value:function(t,e){return e?(this._data.set(t,e),this):this._data.get(t)}},{key:"on",value:function(t,e){var r,n=f(r=t.split("."))||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(r)||c(r)||u(),i=n[0],o=n.slice(1);return this._.addEventListener(i,(function(t){e(t);for(var r=0;r<o.length;r+=1)"stop"===o[r]&&t.stopPropagation(),"prevent"===o[r]&&t.preventDefault()})),this}},{key:"attr",value:function(t,e){return e?(this._.setAttribute(t,e),this):this._.getAttribute(t)}},{key:"css",value:function(t,e){return e?(this._.style.setProperty(t,e),this):this._.style.getPropertyValue(t)}},{key:"rect",value:function(){return this._.getBoundingClientRect()}},{key:"show",value:function(){return this.css("display","block"),this}},{key:"hide",value:function(){return this.css("display","hide"),this}},{key:"scrollx",value:function(t){var e=this._;return t?(e.scrollLeft=t,this):e.scrollLeft}},{key:"scrolly",value:function(t){var e=this._;return t?(e.scrollTop=t,this):e.scrollTop}},{key:"after",value:function(){return this._.after(d.apply(void 0,arguments)),this}},{key:"before",value:function(){return this._.before(d.apply(void 0,arguments)),this}},{key:"append",value:function(){return this._.append(d.apply(void 0,arguments)),this}},{key:"remove",value:function(){for(var e=this,r=arguments.length,n=new Array(r),i=0;i<r;i++)n[i]=arguments[i];n.forEach((function(r){e._.removeChild(r instanceof t?r._:r)}))}}],r&&y(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function w(t,e){return new v(t,e)}function p(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function g(t){return function(t){if(Array.isArray(t))return _(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return _(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function b(e,r,n,i,o){if(e.scroll){var a=(0,t.expr2xy)(e.scroll),l=n[i],s=!1;if(r>n[i])for(var u=a[i];u<e.rows.len&&!(l>r);u+=1)l+=o(u),a[i]=u+1,s=!0;else for(var c=a[i];c>0&&!(l<r);c-=1)l-=o(c),a[i]=c-1,s=!0;return e.scroll=t.xy2expr.apply(void 0,g(a)),n[i]=r,[s].concat(g(a))}}function m(e,r,n,i,o){if(e.scroll){var a=(0,t.expr2xy)(e.scroll),l=a[r],s=l+n;s<=0&&(s=0),s>e.rows.len&&(s=e.rows.len);var u=i[r];if(n>0)for(var c=l;c<s&&!(c>=e.rows.len);c+=1)u+=o(c);else for(var h=s;h<l;h+=1)u-=o(h);return a[r]=s,e.scroll=t.xy2expr.apply(void 0,g(a)),i[r]=u,a[r]}}var k=function(){function t(e){var r,n;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),n=[0,0],(r="_value")in this?Object.defineProperty(this,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):this[r]=n,this._data=e}var e,r;return e=t,(r=[{key:"x",value:function(t){var e=this;return b(this._data(),t,this._value,0,(function(t){return o(e._data(),t).width}))}},{key:"y",value:function(t){var e=this;return b(this._data(),t,this._value,1,(function(t){return l(e._data(),t).height}))}},{key:"stepCol",value:function(t){var e=this;return m(this._data(),0,t,this._value,(function(t){return o(e._data(),t).width}))}},{key:"stepRow",value:function(t){var e=this;return m(this._data(),1,t,this._value,(function(t){return l(e._data(),t).height}))}}])&&p(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function x(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var S={vertical:"height",horizontal:"width"},C=function(){function t(e){var r,n=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),(r="_change")in this?Object.defineProperty(this,r,{value:null,enumerable:!0,configurable:!0,writable:!0}):this[r]=null,this._type=e,this._content=w("div","content"),this._=w("div","".concat("wolf-table","-scrollbar ").concat(e)).append(this._content).on("scroll.stop",(function(t){var r=t.target,i=r.scrollTop,o=r.scrollLeft;n._change&&n._change("vertical"===e?i:o,t)}))}var e,r;return e=t,(r=[{key:"change",value:function(t){return this._change=t,this}},{key:"scroll",value:function(t){var e=this._,r=this._type;return t?("vertical"===r?e.scrolly(t):e.scrollx(t),this):"vertical"===r?e.scrolly():e.scrollx()}},{key:"resize",value:function(t,e){if(e>t-1){var r=S[this._type];this._content.css(r,"".concat(e,"px")),this._.css(r,"".concat(t,"px")).show()}else this._.hide();return this}}])&&x(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function j(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function O(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}var R=function(){function t(r,n,i,o){var a=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),O(this,"_vScrollbar",null),O(this,"_hScrollbar",null),this._width=n,this._height=i;var l="string"==typeof r?document.querySelector(r):r;if(null===l)throw new Error("first argument error");this._container=w(l),this._data={rows:{len:100},cols:{len:26},rowHeight:25,colWidth:100,style:{fontName:"Helvetica",fontSize:10,color:"#333",bgcolor:"#fff",align:"left",valign:"middle",textwrap:!1,bold:!1,italic:!1,underline:!1,strikethrough:!1}},o&&(o.cols&&(this._data.cols.len=o.cols),o.rows&&(this._data.rows.len=o.rows),o.rowHeight&&(this._data.rowHeight=o.rowHeight),o.colWidth&&(this._data.colWidth=o.colWidth),o.cellStyle&&Object.assign(this._data.style,o.cellStyle));var s=document.createElement("canvas");if(this._render=new(e())(s,n(),i()),this._container.append(s),null!=o&&o.scrollable){var u=new k((function(){return a._data}));this._vScrollbar=new C("vertical").change((function(t){u.y(t),a.render()})),this._hScrollbar=new C("horizontal").change((function(t){u.x(t),a.render()})),this._container.append(this._vScrollbar._,this._hScrollbar._),P(this)}}var r,n;return r=t,n=[{key:"colHeader",value:function(t){return this._colHeader=t,this}},{key:"rowHeader",value:function(t){return this._rowHeader=t,this}},{key:"data",value:function(t){function e(e){return t.apply(this,arguments)}return e.toString=function(){return t.toString()},e}((function(t){return t?(this._data=t,P(this),this):this._data}))},{key:"render",value:function(){var t=this;this._render.colHeader(this._colHeader).rowHeader(this._rowHeader).merges(this._data.merges).freeze(this._data.freeze).styles(this._data.styles).rows(this._data.rows.len).cols(this._data.cols.len).row((function(e){return l(t._data,e)})).col((function(e){return o(t._data,e)})).cell((function(e,r){return n=e,i=r,(o=t._data.cells)?o[n][i]:void 0;var n,i,o})).render()}}],n&&j(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),t}();function P(t){console.log("content.size: ",s(t._data),a(t._data)),t._vScrollbar&&t._vScrollbar.resize(t._height(),s(t._data)),t._hScrollbar&&t._hScrollbar.resize(t._width()-15,a(t._data))}function A(t,e,r,n){return new R(t,e,r,n)}})(),module.exports=n})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LE9BQVdHLEVBQUksRUFBS2lCLE1BQU9wQixNQUMvQkQsS0FBSSxTQUFDQyxHQUFELE9BQVdELEVBQUksRUFBS3FCLE1BQU9wQixNQUMvQjlDLE1BQUssU0FBQ2pNLEVBQUc4QyxHQUFKLE9MdEQrQm9SLEVLc0RKbFUsRUx0RHNCbVUsRUtzRG5CclIsR0x0RG5Cc1IsRUtzREksRUFBS2pFLE1MdERUaUUsT0FDTkEsRUFBTUYsR0FBVUMsUUFBWWpHLEVBRHRDLElBQW9DZ0csRUFBa0JDLEVBQXRDQyxLS3VEaEJULFkseUVBcEdjWixHQTBHckIsU0FBU2MsRUFBc0JoVSxHQUM3QndVLFFBQVFDLElBQUksaUJBQWtCbkYsRUFBV3RQLEVBQUVzUSxPQUFRbkIsRUFBVW5QLEVBQUVzUSxRQUMzRHRRLEVBQUU0VCxhQUNKNVQsRUFBRTRULFlBQVljLE9BQU8xVSxFQUFFc04sVUFBV2dDLEVBQVd0UCxFQUFFc1EsUUFFN0N0USxFQUFFK1QsYUFDSi9ULEVBQUUrVCxZQUFZVyxPQUFPMVUsRUFBRXVOLFNBQVcsR0FBSTRCLEVBQVVuUCxFQUFFc1EsUUFNL0MsU0FBU3FFLEVBQ2R4QixFQUNBclAsRUFDQUYsRUFDQXdQLEdBRUEsT0FBTyxJQUFJRixFQUFNQyxFQUFTclAsRUFBT0YsRUFBUXdQLEsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YWJsZS8uLi90YWJsZS1yZW5kZXIvZGlzdC90YWJsZS1yZW5kZXIuanMiLCJ3ZWJwYWNrOi8vdGFibGUvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdGFibGUvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vdGFibGUvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3RhYmxlL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vdGFibGUvd2VicGFjay9ydW50aW1lL21ha2UgbmFtZXNwYWNlIG9iamVjdCIsIndlYnBhY2s6Ly90YWJsZS8uL3NyYy9oZWxwZXIudHMiLCJ3ZWJwYWNrOi8vdGFibGUvLi9zcmMvZGF0YS50cyIsIndlYnBhY2s6Ly90YWJsZS8uL3NyYy9lbGVtZW50LnRzIiwid2VicGFjazovL3RhYmxlLy4vc3JjL3Njcm9sbC50cyIsIndlYnBhY2s6Ly90YWJsZS8uL3NyYy9zY3JvbGxiYXIvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vdGFibGUvLi9zcmMvY29uZmlnLnRzIiwid2VicGFjazovL3RhYmxlLy4vc3JjL2luZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIigoKT0+e1widXNlIHN0cmljdFwiO3ZhciB0PXtkOihlLHIpPT57Zm9yKHZhciBuIGluIHIpdC5vKHIsbikmJiF0Lm8oZSxuKSYmT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsbix7ZW51bWVyYWJsZTohMCxnZXQ6cltuXX0pfSxvOih0LGUpPT5PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKSxyOnQ9PntcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZTeW1ib2wudG9TdHJpbmdUYWcmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFN5bWJvbC50b1N0cmluZ1RhZyx7dmFsdWU6XCJNb2R1bGVcIn0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pfX0sZT17fTt0LnIoZSksdC5kKGUse2NyZWF0ZVRhYmxlUmVuZGVyOigpPT5ELGRlZmF1bHQ6KCk9PkwsZXhwcjJ4eTooKT0+YSx4eTJleHByOigpPT5sfSk7dmFyIHI9XCJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWlwiO2Z1bmN0aW9uIG4odCl7cmV0dXJuIHIuY2hhckF0KHQlci5sZW5ndGgpfWZ1bmN0aW9uIGkodCl7Zm9yKHZhciBlPVtdO3Q+PTA7KWUucHVzaChuKHQpKSx0PXBhcnNlSW50KHQvci5sZW5ndGgrXCJcIiwxMCktMTtyZXR1cm4gZS5yZXZlcnNlKCkuam9pbihcIlwiKX1mdW5jdGlvbiBvKHQpe2Zvcih2YXIgZT0wLHI9MDtyPHQubGVuZ3RoO3IrKyllPTI2KmUrdC5jaGFyQ29kZUF0KHIpLTY0O3JldHVybiBlLTF9ZnVuY3Rpb24gYSh0KXtmb3IodmFyIGU9XCJcIixyPVwiXCIsbj0wO248dC5sZW5ndGg7bis9MSl0LmNoYXJBdChuKT49XCIwXCImJnQuY2hhckF0KG4pPD1cIjlcIj9yKz10LmNoYXJBdChuKTplKz10LmNoYXJBdChuKS50b1VwcGVyQ2FzZSgpO3JldHVybltvKGUpLHBhcnNlSW50KHIsMTApLTFdfWZ1bmN0aW9uIGwodCxlKXtyZXR1cm5cIlwiLmNvbmNhdChpKHQpKS5jb25jYXQoZSsxKX1mdW5jdGlvbiBzKHQsZSl7Zm9yKHZhciByPTA7cjxlLmxlbmd0aDtyKyspe3ZhciBuPWVbcl07bi5lbnVtZXJhYmxlPW4uZW51bWVyYWJsZXx8ITEsbi5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gbiYmKG4ud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LG4ua2V5LG4pfX12YXIgdT1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoZSxyLG4saSl7IWZ1bmN0aW9uKHQsZSl7aWYoISh0IGluc3RhbmNlb2YgZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX0odGhpcyx0KSx0aGlzLnN0YXJ0Um93PWUsdGhpcy5zdGFydENvbD1yLHRoaXMuZW5kUm93PW4sdGhpcy5lbmRDb2w9aX12YXIgZSxyO3JldHVybiBlPXQsKHI9W3trZXk6XCJzdGFydFwiLGdldDpmdW5jdGlvbigpe3JldHVyblt0aGlzLnN0YXJ0Um93LHRoaXMuc3RhcnRDb2xdfX0se2tleTpcImVuZFwiLGdldDpmdW5jdGlvbigpe3JldHVyblt0aGlzLmVuZFJvdyx0aGlzLmVuZENvbF19fSx7a2V5Olwicm93c1wiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmVuZFJvdy10aGlzLnN0YXJ0Um93fX0se2tleTpcImNvbHNcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lbmRDb2wtdGhpcy5zdGFydENvbH19LHtrZXk6XCJjb250YWluc1Jvd1wiLHZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnN0YXJ0Um93PD10JiZ0PD10aGlzLmVuZFJvd319LHtrZXk6XCJjb250YWluc0NvbFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnN0YXJ0Q29sPD10JiZ0PD10aGlzLmVuZENvbH19LHtrZXk6XCJjb250YWluc1wiLHZhbHVlOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuY29udGFpbnNSb3codCkmJnRoaXMuY29udGFpbnNDb2woZSl9fSx7a2V5Olwid2l0aGluXCIsdmFsdWU6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuc3RhcnRSb3c+PXQuc3RhcnRSb3cmJnRoaXMuc3RhcnRDb2w+PXQuc3RhcnRDb2wmJnRoaXMuZW5kUm93PD10LmVuZFJvdyYmdGhpcy5lbmRDb2w8PXQuZW5kQ29sfX0se2tleTpcImludGVyc2VjdHNcIix2YWx1ZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5zdGFydFJvdzw9dC5lbmRSb3cmJnRoaXMuc3RhcnRDb2w8PXQuZW5kQ29sJiZ0LnN0YXJ0Um93PD10aGlzLmVuZFJvdyYmdC5zdGFydENvbDw9dGhpcy5lbmRDb2x9fSx7a2V5OlwidW5pb25cIix2YWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3IHQoZS5zdGFydFJvdzx0aGlzLnN0YXJ0Um93P2Uuc3RhcnRSb3c6dGhpcy5zdGFydFJvdyxlLnN0YXJ0Q29sPHRoaXMuc3RhcnRDb2w/ZS5zdGFydENvbDp0aGlzLnN0YXJ0Q29sLGUuZW5kUm93PnRoaXMuZW5kUm93P2UuZW5kUm93OnRoaXMuZW5kUm93LGUuZW5kQ29sPnRoaXMuZW5kQ29sP2UuZW5kQ29sOnRoaXMuZW5kQ29sKX19LHtrZXk6XCJlYWNoUm93XCIsdmFsdWU6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMuc3RhcnRSb3c7ZTw9dGhpcy5lbmRSb3c7ZSs9MSl0KGUpO3JldHVybiB0aGlzfX0se2tleTpcImVhY2hDb2xcIix2YWx1ZTpmdW5jdGlvbih0KXtmb3IodmFyIGU9dGhpcy5zdGFydENvbDtlPD10aGlzLmVuZENvbDtlKz0xKXQoZSk7cmV0dXJuIHRoaXN9fSx7a2V5OlwiZWFjaFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7cmV0dXJuIHRoaXMuZWFjaFJvdygoZnVuY3Rpb24ocil7ZS5lYWNoQ29sKChmdW5jdGlvbihlKXtyZXR1cm4gdChyLGUpfSkpfSkpLHRoaXN9fSx7a2V5OlwiY2xvbmVcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiBuZXcgdCh0aGlzLnN0YXJ0Um93LHRoaXMuc3RhcnRDb2wsdGhpcy5lbmRSb3csdGhpcy5lbmRDb2wpfX1dKSYmcyhlLnByb3RvdHlwZSxyKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcInByb3RvdHlwZVwiLHt3cml0YWJsZTohMX0pLHR9KCk7ZnVuY3Rpb24gYyh0LGUpe2Zvcih2YXIgcj0wO3I8ZS5sZW5ndGg7cisrKXt2YXIgbj1lW3JdO24uZW51bWVyYWJsZT1uLmVudW1lcmFibGV8fCExLG4uY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIG4mJihuLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxuLmtleSxuKX19ZnVuY3Rpb24gaCh0LGUscil7cmV0dXJuIGUgaW4gdD9PYmplY3QuZGVmaW5lUHJvcGVydHkodCxlLHt2YWx1ZTpyLGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwfSk6dFtlXT1yLHR9dmFyIGY9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KGUscixuLGksbyl7dmFyIGE9dGhpczshZnVuY3Rpb24odCxlKXtpZighKHQgaW5zdGFuY2VvZiBlKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfSh0aGlzLHQpLGgodGhpcyxcIndpZHRoXCIsMCksaCh0aGlzLFwiaGVpZ2h0XCIsMCksaCh0aGlzLFwicm93TWFwXCIsbmV3IE1hcCksaCh0aGlzLFwiY29sTWFwXCIsbmV3IE1hcCksdGhpcy5yYW5nZT1lLHRoaXMueD1yLHRoaXMueT1uLHRoaXMucm93SGVpZ2h0PWksdGhpcy5jb2xXaWR0aD1vLGUuZWFjaFJvdygoZnVuY3Rpb24odCl7dmFyIGU9aSh0KTtlPjAmJihhLnJvd01hcC5zZXQodCx7eTphLmhlaWdodCxoZWlnaHQ6ZX0pLGEuaGVpZ2h0Kz1lKX0pKSxlLmVhY2hDb2woKGZ1bmN0aW9uKHQpe3ZhciBlPW8odCk7ZT4wJiYoYS5jb2xNYXAuc2V0KHQse3g6YS53aWR0aCx3aWR0aDplfSksYS53aWR0aCs9ZSl9KSl9dmFyIGUscixuO3JldHVybiBlPXQsbj1be2tleTpcImNyZWF0ZVwiLHZhbHVlOmZ1bmN0aW9uKGUscixuLGksbyxhLGwscyl7cmV0dXJuIG5ldyB0KG5ldyB1KGUscixuLGkpLG8sYSxsLHMpfX1dLChyPVt7a2V5OlwiZWFjaFJvd1wiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7dGhpcy5yYW5nZS5lYWNoUm93KChmdW5jdGlvbihyKXt2YXIgbj1lLnJvd01hcC5nZXQocil8fHt5OjAsaGVpZ2h0OjB9LGk9bi55LG89bi5oZWlnaHQ7bz4wJiZ0KHIsaSxvKX0pKX19LHtrZXk6XCJlYWNoQ29sXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpczt0aGlzLnJhbmdlLmVhY2hDb2woKGZ1bmN0aW9uKHIpe3ZhciBuPWUuY29sTWFwLmdldChyKXx8e3g6MCx3aWR0aDowfSxpPW4ueCxvPW4ud2lkdGg7bz4wJiZ0KHIsaSxvKX0pKX19LHtrZXk6XCJlYWNoXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpczt0aGlzLmVhY2hSb3coKGZ1bmN0aW9uKHIsbixpKXtlLmVhY2hDb2woKGZ1bmN0aW9uKGUsbyxhKXt0KHIsZSx7eDpvLHk6bix3aWR0aDphLGhlaWdodDppfSl9KSl9KSl9fSx7a2V5OlwicmVjdFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlLHIsbj10aGlzLGk9dGhpcy5yb3dNYXAsbz10aGlzLmNvbE1hcCxhPXRoaXMucmFuZ2UsbD17eDowLHk6MCx3aWR0aDowLGhlaWdodDowfTtyZXR1cm4gdC5zdGFydFJvdz49YS5zdGFydFJvdyYmKGwueT0obnVsbD09PShlPWkuZ2V0KHQuc3RhcnRSb3cpKXx8dm9pZCAwPT09ZT92b2lkIDA6ZS55KXx8MCksdC5lYWNoUm93KChmdW5jdGlvbih0KXt2YXIgZT1uLnJvd0hlaWdodCh0KTtlPjAmJih0PGEuc3RhcnRSb3cmJihsLnktPWUpLGwuaGVpZ2h0Kz1lKX0pKSx0LnN0YXJ0Q29sPj1hLnN0YXJ0Q29sJiYobC54PShudWxsPT09KHI9by5nZXQodC5zdGFydENvbCkpfHx2b2lkIDA9PT1yP3ZvaWQgMDpyLngpfHwwKSx0LmVhY2hDb2woKGZ1bmN0aW9uKHQpe3ZhciBlPW4uY29sV2lkdGgodCk7ZT4wJiYodDxhLnN0YXJ0Q29sJiYobC54LT1lKSxsLndpZHRoKz1lKX0pKSxsfX1dKSYmYyhlLnByb3RvdHlwZSxyKSxuJiZjKGUsbiksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJwcm90b3R5cGVcIix7d3JpdGFibGU6ITF9KSx0fSgpO2Z1bmN0aW9uIHkodCxlKXsobnVsbD09ZXx8ZT50Lmxlbmd0aCkmJihlPXQubGVuZ3RoKTtmb3IodmFyIHI9MCxuPW5ldyBBcnJheShlKTtyPGU7cisrKW5bcl09dFtyXTtyZXR1cm4gbn1mdW5jdGlvbiBkKHQsZSl7Zm9yKHZhciByPTA7cjxlLmxlbmd0aDtyKyspe3ZhciBuPWVbcl07bi5lbnVtZXJhYmxlPW4uZW51bWVyYWJsZXx8ITEsbi5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gbiYmKG4ud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LG4ua2V5LG4pfX12YXIgdj1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoZSxyKXshZnVuY3Rpb24odCxlKXtpZighKHQgaW5zdGFuY2VvZiBlKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfSh0aGlzLHQpLHRoaXMudGFyZ2V0PWU7dmFyIG49ZS5nZXRDb250ZXh0KFwiMmRcIik7aWYoIW4pdGhyb3cgbmV3IEVycm9yKFwiZ2V0Q29udGV4dCgyZCkgaXMgbnVsbFwiKTt0aGlzLl9jdHg9bix0aGlzLl9zY2FsZT1yLHRoaXMuX3RhcmdldD1lfXZhciBlLHI7cmV0dXJuIGU9dCwocj1be2tleTpcInNpemVcIix2YWx1ZTpmdW5jdGlvbih0LGUpe3ZhciByPXRoaXMuX3RhcmdldCxuPXRoaXMuX3NjYWxlO3Iuc3R5bGUud2lkdGg9XCJcIi5jb25jYXQodCxcInB4XCIpLHIuc3R5bGUuaGVpZ2h0PVwiXCIuY29uY2F0KGUsXCJweFwiKTt2YXIgaT13aW5kb3cuZGV2aWNlUGl4ZWxSYXRpbztyZXR1cm4gci53aWR0aD1NYXRoLmZsb29yKHQqaSksci5oZWlnaHQ9TWF0aC5mbG9vcihlKmkpLHRoaXMuX2N0eC5zY2FsZShpKm4saSpuKSx0aGlzfX0se2tleTpcImF0dHJcIix2YWx1ZTpmdW5jdGlvbih0LGUpe3ZhciByPXRoaXM7cmV0dXJuIGU/KHRoaXMuX2N0eFt0XT1lLHRoaXMpOlwic3RyaW5nXCI9PXR5cGVvZiB0P3RoaXMuX2N0eFt0XTooT2JqZWN0LmVudHJpZXModCkuZm9yRWFjaCgoZnVuY3Rpb24odCl7dmFyIGUsbixpPShuPTIsZnVuY3Rpb24odCl7aWYoQXJyYXkuaXNBcnJheSh0KSlyZXR1cm4gdH0oZT10KXx8ZnVuY3Rpb24odCxlKXt2YXIgcj1udWxsPT10P251bGw6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFN5bWJvbCYmdFtTeW1ib2wuaXRlcmF0b3JdfHx0W1wiQEBpdGVyYXRvclwiXTtpZihudWxsIT1yKXt2YXIgbixpLG89W10sYT0hMCxsPSExO3RyeXtmb3Iocj1yLmNhbGwodCk7IShhPShuPXIubmV4dCgpKS5kb25lKSYmKG8ucHVzaChuLnZhbHVlKSwhZXx8by5sZW5ndGghPT1lKTthPSEwKTt9Y2F0Y2godCl7bD0hMCxpPXR9ZmluYWxseXt0cnl7YXx8bnVsbD09ci5yZXR1cm58fHIucmV0dXJuKCl9ZmluYWxseXtpZihsKXRocm93IGl9fXJldHVybiBvfX0oZSxuKXx8ZnVuY3Rpb24odCxlKXtpZih0KXtpZihcInN0cmluZ1wiPT10eXBlb2YgdClyZXR1cm4geSh0LGUpO3ZhciByPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KS5zbGljZSg4LC0xKTtyZXR1cm5cIk9iamVjdFwiPT09ciYmdC5jb25zdHJ1Y3RvciYmKHI9dC5jb25zdHJ1Y3Rvci5uYW1lKSxcIk1hcFwiPT09cnx8XCJTZXRcIj09PXI/QXJyYXkuZnJvbSh0KTpcIkFyZ3VtZW50c1wiPT09cnx8L14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3Qocik/eSh0LGUpOnZvaWQgMH19KGUsbil8fGZ1bmN0aW9uKCl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKX0oKSksbz1pWzBdLGE9aVsxXTtudWxsIT1hJiYoci5fY3R4W29dPWEpfSkpLHRoaXMpfX0se2tleTpcIm1lYXN1cmVUZXh0V2lkdGhcIix2YWx1ZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5tZWFzdXJlVGV4dCh0KS53aWR0aH19LHtrZXk6XCJsaW5lXCIsdmFsdWU6ZnVuY3Rpb24odCxlLHIsbixpKXtyZXR1cm4gaSYmKHRoaXMuYXR0cih7bGluZVdpZHRoOjEsc3Ryb2tlU3R5bGU6aS5jb2xvcn0pLFwibWVkaXVtXCI9PT1pLnR5cGU/dGhpcy5hdHRyKHtsaW5lV2lkdGg6Mn0pOlwidGhpY2tcIj09PWkudHlwZT90aGlzLmF0dHIoe2xpbmVXaWR0aDozfSk6XCJkYXNoZWRcIj09PWkudHlwZT90aGlzLnNldExpbmVEYXNoKFszLDJdKTpcImRvdHRlZFwiPT09aS50eXBlJiZ0aGlzLnNldExpbmVEYXNoKFsxLDFdKSksdGhpcy5tb3ZlVG8odCxlKS5saW5lVG8ocixuKS5zdHJva2UoKSx0aGlzfX0se2tleTpcImNsZWFyUmVjdFwiLHZhbHVlOmZ1bmN0aW9uKHQsZSxyLG4pe3JldHVybiB0aGlzLl9jdHguY2xlYXJSZWN0KHQsZSxyLG4pLHRoaXN9fSx7a2V5OlwiZmlsbFJlY3RcIix2YWx1ZTpmdW5jdGlvbih0LGUscixuKXtyZXR1cm4gdGhpcy5fY3R4LmZpbGxSZWN0KHQsZSxyLG4pLHRoaXN9fSx7a2V5Olwic3Ryb2tlUmVjdFwiLHZhbHVlOmZ1bmN0aW9uKHQsZSxyLG4pe3JldHVybiB0aGlzLl9jdHguc3Ryb2tlUmVjdCh0LGUscixuKSx0aGlzfX0se2tleTpcImZpbGxUZXh0XCIsdmFsdWU6ZnVuY3Rpb24odCxlLHIsbil7cmV0dXJuIHRoaXMuX2N0eC5maWxsVGV4dCh0LGUscixuKSx0aGlzfX0se2tleTpcInN0cm9rZVRleHRcIix2YWx1ZTpmdW5jdGlvbih0LGUscixuKXtyZXR1cm4gdGhpcy5fY3R4LnN0cm9rZVRleHQodCxlLHIsbiksdGhpc319LHtrZXk6XCJtZWFzdXJlVGV4dFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9jdHgubWVhc3VyZVRleHQodCl9fSx7a2V5OlwiZ2V0TGluZURhc2hcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jdHguZ2V0TGluZURhc2goKX19LHtrZXk6XCJzZXRMaW5lRGFzaFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9jdHguc2V0TGluZURhc2godCksdGhpc319LHtrZXk6XCJjcmVhdGVMaW5lYXJHcmFkaWVudFwiLHZhbHVlOmZ1bmN0aW9uKHQsZSxyLG4pe3JldHVybiB0aGlzLl9jdHguY3JlYXRlTGluZWFyR3JhZGllbnQodCxlLHIsbil9fSx7a2V5OlwiY3JlYXRlUmFkaWFsR3JhZGllbnRcIix2YWx1ZTpmdW5jdGlvbih0LGUscixuLGksbyl7cmV0dXJuIHRoaXMuX2N0eC5jcmVhdGVSYWRpYWxHcmFkaWVudCh0LGUscixuLGksbyl9fSx7a2V5OlwiY3JlYXRlUGF0dGVyblwiLHZhbHVlOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuX2N0eC5jcmVhdGVQYXR0ZXJuKHQsZSl9fSx7a2V5OlwiYmVnaW5QYXRoXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY3R4LmJlZ2luUGF0aCgpLHRoaXN9fSx7a2V5OlwiY2xvc2VQYXRoXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY3R4LmNsb3NlUGF0aCgpLHRoaXN9fSx7a2V5OlwibW92ZVRvXCIsdmFsdWU6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5fY3R4Lm1vdmVUbyh0LGUpLHRoaXN9fSx7a2V5OlwibGluZVRvXCIsdmFsdWU6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5fY3R4LmxpbmVUbyh0LGUpLHRoaXN9fSx7a2V5OlwiYmV6aWVyQ3VydmVUb1wiLHZhbHVlOmZ1bmN0aW9uKHQsZSxyLG4saSxvKXtyZXR1cm4gdGhpcy5iZXppZXJDdXJ2ZVRvKHQsZSxyLG4saSxvKSx0aGlzfX0se2tleTpcInF1YWRyYXRpY0N1cnZlVG9cIix2YWx1ZTpmdW5jdGlvbih0LGUscixuKXtyZXR1cm4gdGhpcy5xdWFkcmF0aWNDdXJ2ZVRvKHQsZSxyLG4pLHRoaXN9fSx7a2V5OlwiYXJjXCIsdmFsdWU6ZnVuY3Rpb24odCxlLHIsbixpLG8pe3JldHVybiB0aGlzLl9jdHguYXJjKHQsZSxyLG4saSxvKSx0aGlzfX0se2tleTpcImFyY1RvXCIsdmFsdWU6ZnVuY3Rpb24odCxlLHIsbixpKXtyZXR1cm4gdGhpcy5fY3R4LmFyY1RvKHQsZSxyLG4saSksdGhpc319LHtrZXk6XCJlbGxpcHNlXCIsdmFsdWU6ZnVuY3Rpb24odCxlLHIsbixpLG8sYSxsKXtyZXR1cm4gdGhpcy5fY3R4LmVsbGlwc2UodCxlLHIsbixpLG8sYSxsKSx0aGlzfX0se2tleTpcInJlY3RcIix2YWx1ZTpmdW5jdGlvbih0LGUscixuKXtyZXR1cm4gdGhpcy5fY3R4LnJlY3QodCxlLHIsbiksdGhpc319LHtrZXk6XCJmaWxsXCIsdmFsdWU6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX2N0eC5maWxsKHQpLHRoaXN9fSx7a2V5Olwic3Ryb2tlXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY3R4LnN0cm9rZSgpLHRoaXN9fSx7a2V5OlwiY2xpcFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9jdHguY2xpcCh0KSx0aGlzfX0se2tleTpcImlzUG9pbnRJblBhdGhcIix2YWx1ZTpmdW5jdGlvbih0LGUscil7cmV0dXJuIHRoaXMuX2N0eC5pc1BvaW50SW5QYXRoKHQsZSxyKX19LHtrZXk6XCJpc1BvaW50SW5TdHJva2VcIix2YWx1ZTpmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLl9jdHguaXNQb2ludEluU3Ryb2tlKHQsZSl9fSx7a2V5OlwiZ2V0VHJhbnNmb3JtXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY3R4LmdldFRyYW5zZm9ybSgpfX0se2tleTpcInJvdGF0ZVwiLHZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9jdHgucm90YXRlKHQpLHRoaXN9fSx7a2V5Olwic2NhbGVcIix2YWx1ZTpmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLl9jdHguc2NhbGUodCxlKSx0aGlzfX0se2tleTpcInRyYW5zbGF0ZVwiLHZhbHVlOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuX2N0eC50cmFuc2xhdGUodCxlKSx0aGlzfX0se2tleTpcInNldFRyYW5zZm9ybVwiLHZhbHVlOmZ1bmN0aW9uKHQsZSxyLG4saSxvKXtyZXR1cm4gdGhpcy5fY3R4LnNldFRyYW5zZm9ybSh0LGUscixuLGksbyksdGhpc319LHtrZXk6XCJkcmF3SW1hZ2VcIix2YWx1ZTpmdW5jdGlvbih0LGUscil7cmV0dXJuIHRoaXMuX2N0eC5kcmF3SW1hZ2UodCxlLHIpLHRoaXN9fSx7a2V5OlwiY3JlYXRlSW1hZ2VEYXRhXCIsdmFsdWU6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5fY3R4LmNyZWF0ZUltYWdlRGF0YSh0LGUpfX0se2tleTpcImdldEltYWdlRGF0YVwiLHZhbHVlOmZ1bmN0aW9uKHQsZSxyLG4pe3JldHVybiB0aGlzLl9jdHguZ2V0SW1hZ2VEYXRhKHQsZSxyLG4pfX0se2tleTpcInB1dEltYWdlRGF0YVwiLHZhbHVlOmZ1bmN0aW9uKHQsZSxyKXtyZXR1cm4gdGhpcy5fY3R4LnB1dEltYWdlRGF0YSh0LGUsciksdGhpc319LHtrZXk6XCJzYXZlXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY3R4LnNhdmUoKSx0aGlzfX0se2tleTpcInJlc3RvcmVcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jdHgucmVzdG9yZSgpLHRoaXN9fV0pJiZkKGUucHJvdG90eXBlLHIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwicHJvdG90eXBlXCIse3dyaXRhYmxlOiExfSksdH0oKTtmdW5jdGlvbiB3KHQsZSl7aWYodCl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQpcmV0dXJuIGcodCxlKTt2YXIgcj1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkuc2xpY2UoOCwtMSk7cmV0dXJuXCJPYmplY3RcIj09PXImJnQuY29uc3RydWN0b3ImJihyPXQuY29uc3RydWN0b3IubmFtZSksXCJNYXBcIj09PXJ8fFwiU2V0XCI9PT1yP0FycmF5LmZyb20odCk6XCJBcmd1bWVudHNcIj09PXJ8fC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KHIpP2codCxlKTp2b2lkIDB9fWZ1bmN0aW9uIGcodCxlKXsobnVsbD09ZXx8ZT50Lmxlbmd0aCkmJihlPXQubGVuZ3RoKTtmb3IodmFyIHI9MCxuPW5ldyBBcnJheShlKTtyPGU7cisrKW5bcl09dFtyXTtyZXR1cm4gbn1mdW5jdGlvbiBwKHQsZSxyLG4pe2lmKHQmJmUpe3ZhciBpPVwiXCI7cmV0dXJuIHImJihpKz1cIml0YWxpYyBcIiksbiYmKGkrPVwiYm9sZCBcIiksXCJcIi5jb25jYXQoaSxcIiBcIikuY29uY2F0KGUsXCJwdCBcIikuY29uY2F0KHQpfX1mdW5jdGlvbiBiKHQsZSl7cmV0dXJuIGZ1bmN0aW9uKHQpe2lmKEFycmF5LmlzQXJyYXkodCkpcmV0dXJuIHR9KHQpfHxmdW5jdGlvbih0LGUpe3ZhciByPW51bGw9PXQ/bnVsbDpcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZ0W1N5bWJvbC5pdGVyYXRvcl18fHRbXCJAQGl0ZXJhdG9yXCJdO2lmKG51bGwhPXIpe3ZhciBuLGksbz1bXSxhPSEwLGw9ITE7dHJ5e2ZvcihyPXIuY2FsbCh0KTshKGE9KG49ci5uZXh0KCkpLmRvbmUpJiYoby5wdXNoKG4udmFsdWUpLCFlfHxvLmxlbmd0aCE9PWUpO2E9ITApO31jYXRjaCh0KXtsPSEwLGk9dH1maW5hbGx5e3RyeXthfHxudWxsPT1yLnJldHVybnx8ci5yZXR1cm4oKX1maW5hbGx5e2lmKGwpdGhyb3cgaX19cmV0dXJuIG99fSh0LGUpfHxmdW5jdGlvbih0LGUpe2lmKHQpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiB0KXJldHVybiBfKHQsZSk7dmFyIHI9T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpLnNsaWNlKDgsLTEpO3JldHVyblwiT2JqZWN0XCI9PT1yJiZ0LmNvbnN0cnVjdG9yJiYocj10LmNvbnN0cnVjdG9yLm5hbWUpLFwiTWFwXCI9PT1yfHxcIlNldFwiPT09cj9BcnJheS5mcm9tKHQpOlwiQXJndW1lbnRzXCI9PT1yfHwvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChyKT9fKHQsZSk6dm9pZCAwfX0odCxlKXx8ZnVuY3Rpb24oKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpfSgpfWZ1bmN0aW9uIF8odCxlKXsobnVsbD09ZXx8ZT50Lmxlbmd0aCkmJihlPXQubGVuZ3RoKTtmb3IodmFyIHI9MCxuPW5ldyBBcnJheShlKTtyPGU7cisrKW5bcl09dFtyXTtyZXR1cm4gbn1mdW5jdGlvbiBtKHQsZSl7dmFyIHI9T2JqZWN0LmtleXModCk7aWYoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyl7dmFyIG49T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyh0KTtlJiYobj1uLmZpbHRlcigoZnVuY3Rpb24oZSl7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodCxlKS5lbnVtZXJhYmxlfSkpKSxyLnB1c2guYXBwbHkocixuKX1yZXR1cm4gcn1mdW5jdGlvbiBrKHQpe2Zvcih2YXIgZT0xO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspe3ZhciByPW51bGwhPWFyZ3VtZW50c1tlXT9hcmd1bWVudHNbZV06e307ZSUyP20oT2JqZWN0KHIpLCEwKS5mb3JFYWNoKChmdW5jdGlvbihlKXt4KHQsZSxyW2VdKX0pKTpPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycz9PYmplY3QuZGVmaW5lUHJvcGVydGllcyh0LE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHIpKTptKE9iamVjdChyKSkuZm9yRWFjaCgoZnVuY3Rpb24oZSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsZSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHIsZSkpfSkpfXJldHVybiB0fWZ1bmN0aW9uIHgodCxlLHIpe3JldHVybiBlIGluIHQ/T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsZSx7dmFsdWU6cixlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMH0pOnRbZV09cix0fWZ1bmN0aW9uIEModCxlLHIpe3ZhciBuPWUud2lkdGgsaT1lLmNvbG9yO24+MCYmKHQuc2F2ZSgpLmJlZ2luUGF0aCgpLmF0dHIoe2xpbmVXaWR0aDpuLHN0cm9rZVN0eWxlOml9KSxyKCksdC5yZXN0b3JlKCkpfWZ1bmN0aW9uIFModCxlLHIsbixpKXt2YXIgbz1cIlwiLGE9bjtlJiYoXCJzdHJpbmdcIj09dHlwZW9mIGV8fFwibnVtYmVyXCI9PXR5cGVvZiBlP289XCJcIi5jb25jYXQoZSk6KG89KGUudmFsdWV8fFwiXCIpK1wiXCIsZS5zdHlsZSYmKGE9ayhrKHt9LG4pLGlbZS5zdHlsZV0pKSkpLGZ1bmN0aW9uKHQsZSxyLG4pe3ZhciBpPW4uYm9yZGVyLG89bi5mb250U2l6ZSxhPW4uZm9udE5hbWUsbD1uLmJvbGQscz1uLml0YWxpYyx1PW4uY29sb3IsYz1uLmJnY29sb3IsaD1uLmFsaWduLGY9bi52YWxpZ24seT1uLnVuZGVybGluZSxkPW4uc3RyaWtldGhyb3VnaCx2PW4ucm90YXRlLGI9bi50ZXh0d3JhcCxfPW4ucGFkZGluZztpZih0LnNhdmUoKS5iZWdpblBhdGgoKS50cmFuc2xhdGUoci54LHIueSksaSl7dmFyIG09aS50b3Asaz1pLnJpZ2h0LHg9aS5ib3R0b20sQz1pLmxlZnQ7dC5zYXZlKCksbSYmdC5saW5lKDAsMCxyLndpZHRoLDAse3R5cGU6bVswXSxjb2xvcjptWzFdfSksayYmdC5saW5lKHIud2lkdGgsMCxyLndpZHRoLHIuaGVpZ2h0LHt0eXBlOmtbMF0sY29sb3I6a1sxXX0pLHgmJnQubGluZSgwLHIuaGVpZ2h0LHIud2lkdGgsci5oZWlnaHQse3R5cGU6eFswXSxjb2xvcjp4WzFdfSksQyYmdC5saW5lKDAsMCwwLHIuaGVpZ2h0LHt0eXBlOkNbMF0sY29sb3I6Q1sxXX0pLHQucmVzdG9yZSgpfXQuYXR0cihcImZpbGxTdHlsZVwiLGMpLnJlY3QoLjUsLjUsci53aWR0aC0xLHIuaGVpZ2h0LTEpLmNsaXAoKS5maWxsKCksdC5zYXZlKCkuYmVnaW5QYXRoKCkuYXR0cih7dGV4dEFsaWduOmgsdGV4dEJhc2VsaW5lOmYsZm9udDpwKGEsbyxzLGwpLGZpbGxTdHlsZTp1fSksdiYmdj4wJiZ0LnJvdGF0ZSh2KihNYXRoLlBJLzE4MCkpO3ZhciBTLFIsTz0oUj0yLGZ1bmN0aW9uKHQpe2lmKEFycmF5LmlzQXJyYXkodCkpcmV0dXJuIHR9KFM9X3x8WzUsNV0pfHxmdW5jdGlvbih0LGUpe3ZhciByPW51bGw9PXQ/bnVsbDpcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZ0W1N5bWJvbC5pdGVyYXRvcl18fHRbXCJAQGl0ZXJhdG9yXCJdO2lmKG51bGwhPXIpe3ZhciBuLGksbz1bXSxhPSEwLGw9ITE7dHJ5e2ZvcihyPXIuY2FsbCh0KTshKGE9KG49ci5uZXh0KCkpLmRvbmUpJiYoby5wdXNoKG4udmFsdWUpLCFlfHxvLmxlbmd0aCE9PWUpO2E9ITApO31jYXRjaCh0KXtsPSEwLGk9dH1maW5hbGx5e3RyeXthfHxudWxsPT1yLnJldHVybnx8ci5yZXR1cm4oKX1maW5hbGx5e2lmKGwpdGhyb3cgaX19cmV0dXJuIG99fShTLFIpfHx3KFMsUil8fGZ1bmN0aW9uKCl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKX0oKSksaj1PWzBdLFA9T1sxXSxUPWZ1bmN0aW9uKHQsZSxyKXtzd2l0Y2godCl7Y2FzZVwibGVmdFwiOnJldHVybiByO2Nhc2VcImNlbnRlclwiOnJldHVybiBlLzI7Y2FzZVwicmlnaHRcIjpyZXR1cm4gZS1yO2RlZmF1bHQ6cmV0dXJuIDB9fShoLHIud2lkdGgsaiksQT1lLnNwbGl0KFwiXFxuXCIpLEk9ci53aWR0aC0yKmosSD1bXTtBLmZvckVhY2goKGZ1bmN0aW9uKGUpe3ZhciByPXQubWVhc3VyZVRleHRXaWR0aChlKTtpZihiJiZyPkkpe2Zvcih2YXIgbj17dzowLGxlbjowLHN0YXJ0OjB9LGk9MDtpPGUubGVuZ3RoO2krPTEpbi53PkkmJihILnB1c2goZS5zdWJzdHIobi5zdGFydCxuLmxlbikpLG49e3c6MCxsZW46MCxzdGFydDppfSksbi5sZW4rPTEsbi53Kz10Lm1lYXN1cmVUZXh0V2lkdGgoZVtpXSkrMTtuLmxlbj4wJiZILnB1c2goZS5zdWJzdHIobi5zdGFydCxuLmxlbikpfWVsc2UgSC5wdXNoKGUpfSkpO3ZhciBFPTEuNDI1Km8sTT0oSC5sZW5ndGgtMSkqRSxMPVtdO3kmJkwucHVzaChcInVuZGVybGluZVwiKSxkJiZMLnB1c2goXCJzdHJpa2V0aHJvdWdoXCIpO3ZhciBEPWZ1bmN0aW9uKHQsZSxyLG4pe3N3aXRjaCh0KXtjYXNlXCJ0b3BcIjpyZXR1cm4gbjtjYXNlXCJtaWRkbGVcIjpyZXR1cm4gZS8yLXIvMjtjYXNlXCJib3R0b21cIjpyZXR1cm4gZS1uLXI7ZGVmYXVsdDpyZXR1cm4gMH19KGYsci5oZWlnaHQsTSxQKTtILmZvckVhY2goKGZ1bmN0aW9uKGUpe3ZhciByPXQubWVhc3VyZVRleHRXaWR0aChlKTt0LmZpbGxUZXh0KGUsVCxEKSxMLmZvckVhY2goKGZ1bmN0aW9uKGUpe3QubGluZS5hcHBseSh0LGZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbih0KXtpZihBcnJheS5pc0FycmF5KHQpKXJldHVybiBnKHQpfSh0KXx8ZnVuY3Rpb24odCl7aWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIFN5bWJvbCYmbnVsbCE9dFtTeW1ib2wuaXRlcmF0b3JdfHxudWxsIT10W1wiQEBpdGVyYXRvclwiXSlyZXR1cm4gQXJyYXkuZnJvbSh0KX0odCl8fHcodCl8fGZ1bmN0aW9uKCl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIil9KCl9KGZ1bmN0aW9uKHQsZSxyLG4saSxvLGEpe3ZhciBsPTA7XCJ1bmRlcmxpbmVcIj09PXQ/XCJ0b3BcIj09PXI/bD0tYTpcIm1pZGRsZVwiPT09ciYmKGw9LWEvMik6XCJzdHJpa2V0aHJvdWdoXCI9PT10JiYoXCJ0b3BcIj09PXI/bD0tYS8yOlwiYm90dG9tXCI9PT1yJiYobD1hLzIpKTt2YXIgcz0wO3JldHVyblwiY2VudGVyXCI9PT1lP3M9by8yOlwicmlnaHRcIj09PWUmJihzPW8pLFtuLXMsaS1sLG4tcytvLGktbF19KGUsaCxmLFQsRCxyLG8pKSl9KSksRCs9RX0pKSx0LnJlc3RvcmUoKSx0LnJlc3RvcmUoKX0odCxvLHIsYSl9ZnVuY3Rpb24gUih0LGUscixuLGksbyxsLHMsYyl7aWYoZSl7dC5zYXZlKCkudHJhbnNsYXRlKGUueCxlLnkpLGZ1bmN0aW9uKHQsZSxyKXtDKHQsciwoZnVuY3Rpb24oKXtlLmVhY2hSb3coKGZ1bmN0aW9uKHIsbixpKXt0LmxpbmUoMCxuK2ksZS53aWR0aCxuK2kpfSkpLGUuZWFjaENvbCgoZnVuY3Rpb24ocixuLGkpe3QubGluZShuK2ksMCxuK2ksZS5oZWlnaHQpfSkpfSkpfSh0LGUsaSksdC5yZWN0KDAsMCxlLndpZHRoLGUuaGVpZ2h0KS5jbGlwKCk7dmFyIGg9ZnVuY3Rpb24odCxlKXt2YXIgcj1rKHt9LG4pO2lmKHMpe3ZhciBpPXModCk7aSYmaS5zdHlsZSYmT2JqZWN0LmFzc2lnbihyLG9baS5zdHlsZV0pfWlmKGMpe3ZhciBhPWMoZSk7YSYmYS5zdHlsZSYmT2JqZWN0LmFzc2lnbihyLG9bYS5zdHlsZV0pfXJldHVybiByfTtlLmVhY2goKGZ1bmN0aW9uKGUsbixpKXtTKHQscihlLG4pLGksaChlLG4pLG8pfSkpLGwmJih5PWZ1bmN0aW9uKG4pe24uaW50ZXJzZWN0cyhlLnJhbmdlKSYmUyh0LHIobi5zdGFydFJvdyxuLnN0YXJ0Q29sKSxlLnJlY3QobiksaChuLnN0YXJ0Um93LG4uc3RhcnRDb2wpLG8pfSwoZj1sKSYmZi5sZW5ndGg+MCYmZi5mb3JFYWNoKChmdW5jdGlvbih0KXt5KGZ1bmN0aW9uKHQpe3ZhciBlPXQuc3BsaXQoXCI6XCIpLHI9YShlWzBdKSxuPWEoZVsxXSk7cmV0dXJuIG5ldyB1KHJbMV0sclswXSxuWzFdLG5bMF0pfSh0KSl9KSkpLHQucmVzdG9yZSgpfXZhciBmLHl9ZnVuY3Rpb24gTyh0LGUscil7Uih0LGUsci5fY2VsbCxyLl9jZWxsU3R5bGUsci5fbGluZVN0eWxlLHIuX3N0eWxlcyxyLl9tZXJnZXMsci5fcm93LHIuX2NvbCl9ZnVuY3Rpb24gaih0LGUscil7dmFyIG49ci5fcm93SGVhZGVyLGk9bi5jZWxsLG89bi53aWR0aCxhPW4ubWVyZ2VzO24uY29scyxvPjAmJlIodCxlLGksci5faGVhZGVyQ2VsbFN0eWxlLHIuX2hlYWRlckxpbmVTdHlsZSxyLl9zdHlsZXMsYSl9ZnVuY3Rpb24gUCh0LGUscil7dmFyIG49ci5fY29sSGVhZGVyLGk9bi5jZWxsLG89bi5oZWlnaHQsYT1uLm1lcmdlcztuLnJvd3Msbz4wJiZSKHQsZSxpLHIuX2hlYWRlckNlbGxTdHlsZSxyLl9oZWFkZXJMaW5lU3R5bGUsci5fc3R5bGVzLGEpfWZ1bmN0aW9uIFQodCxlKXsobnVsbD09ZXx8ZT50Lmxlbmd0aCkmJihlPXQubGVuZ3RoKTtmb3IodmFyIHI9MCxuPW5ldyBBcnJheShlKTtyPGU7cisrKW5bcl09dFtyXTtyZXR1cm4gbn1mdW5jdGlvbiBBKHQsZSl7Zm9yKHZhciByPTA7cjxlLmxlbmd0aDtyKyspe3ZhciBuPWVbcl07bi5lbnVtZXJhYmxlPW4uZW51bWVyYWJsZXx8ITEsbi5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gbiYmKG4ud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LG4ua2V5LG4pfX1mdW5jdGlvbiBJKHQsZSxyKXtyZXR1cm4gZSYmQSh0LnByb3RvdHlwZSxlKSxyJiZBKHQsciksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJwcm90b3R5cGVcIix7d3JpdGFibGU6ITF9KSx0fXZhciBIPUkoKGZ1bmN0aW9uIHQoZSl7IWZ1bmN0aW9uKHQsZSl7aWYoISh0IGluc3RhbmNlb2YgZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX0odGhpcyx0KTt2YXIgcixuLGk9W2UuX3Jvd0hlYWRlci53aWR0aCxlLl9jb2xIZWFkZXIuaGVpZ2h0XSxvPWlbMF0sYT1pWzFdLGw9KHI9ZS5fZnJlZXplLG49MixmdW5jdGlvbih0KXtpZihBcnJheS5pc0FycmF5KHQpKXJldHVybiB0fShyKXx8ZnVuY3Rpb24odCxlKXt2YXIgcj1udWxsPT10P251bGw6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFN5bWJvbCYmdFtTeW1ib2wuaXRlcmF0b3JdfHx0W1wiQEBpdGVyYXRvclwiXTtpZihudWxsIT1yKXt2YXIgbixpLG89W10sYT0hMCxsPSExO3RyeXtmb3Iocj1yLmNhbGwodCk7IShhPShuPXIubmV4dCgpKS5kb25lKSYmKG8ucHVzaChuLnZhbHVlKSwhZXx8by5sZW5ndGghPT1lKTthPSEwKTt9Y2F0Y2godCl7bD0hMCxpPXR9ZmluYWxseXt0cnl7YXx8bnVsbD09ci5yZXR1cm58fHIucmV0dXJuKCl9ZmluYWxseXtpZihsKXRocm93IGl9fXJldHVybiBvfX0ocixuKXx8ZnVuY3Rpb24odCxlKXtpZih0KXtpZihcInN0cmluZ1wiPT10eXBlb2YgdClyZXR1cm4gVCh0LGUpO3ZhciByPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KS5zbGljZSg4LC0xKTtyZXR1cm5cIk9iamVjdFwiPT09ciYmdC5jb25zdHJ1Y3RvciYmKHI9dC5jb25zdHJ1Y3Rvci5uYW1lKSxcIk1hcFwiPT09cnx8XCJTZXRcIj09PXI/QXJyYXkuZnJvbSh0KTpcIkFyZ3VtZW50c1wiPT09cnx8L14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3Qocik/VCh0LGUpOnZvaWQgMH19KHIsbil8fGZ1bmN0aW9uKCl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKX0oKSkscz1sWzBdLHU9bFsxXSxjPWZ1bmN0aW9uKHQpe3ZhciByPWUuX3Jvdyh0KTtyZXR1cm4gbnVsbCE9ciYmci5oaWRlPzA6KG51bGw9PXI/dm9pZCAwOnIuaGVpZ2h0KXx8ZS5fcm93SGVpZ2h0fTtPYmplY3QuYXNzaWduKHtoZWlnaHQ6ZS5fcm93SGVpZ2h0fSk7Zm9yKHZhciBoPWZ1bmN0aW9uKHQpe3ZhciByPWUuX2NvbCh0KTtyZXR1cm4gbnVsbCE9ciYmci5oaWRlPzA6KG51bGw9PXI/dm9pZCAwOnIud2lkdGgpfHxlLl9jb2xXaWR0aH0seT1lLl9zdGFydFJvdyxkPWUuX3N0YXJ0Q29sLHY9ZS5fcm93cyx3PWUuX2NvbHMsZz1mLmNyZWF0ZSh5LGQsdS0xLHMtMSxvLGEsYyxoKSxwPXUrZS5fc2Nyb2xsUm93cyxiPXMrZS5fc2Nyb2xsQ29scyxfPWcuaGVpZ2h0LG09cDtfPGUuX2hlaWdodCYmbTx2OylfKz1jKG0pLG0rPTE7Zm9yKHZhciBrPWcud2lkdGgseD1iO2s8ZS5fd2lkdGgmJng8dzspays9aCh4KSx4Kz0xO3ZhciBDPWYuY3JlYXRlKHAsYixtLTEseC0xLG8rZy53aWR0aCxhK2cuaGVpZ2h0LGMsaCksUz1mLmNyZWF0ZSh5LGIsdS0xLHgtMSxvK2cud2lkdGgsYSxjLGgpLFI9Zi5jcmVhdGUocCxkLG0tMSxzLTEsbyxhK2cuaGVpZ2h0LGMsaCk7dGhpcy5hcmVhcz1bUyxnLFIsQ107dmFyIE89ZS5fcm93SGVhZGVyLGo9ZS5fY29sSGVhZGVyLFA9ZnVuY3Rpb24oKXtyZXR1cm4gai5yb3dIZWlnaHR9LEE9ZnVuY3Rpb24oKXtyZXR1cm4gTy5jb2xXaWR0aH07dGhpcy5oZWFkZXJBcmVhcz1bZi5jcmVhdGUoMCxTLnJhbmdlLnN0YXJ0Q29sLGoucm93cy0xLFMucmFuZ2UuZW5kQ29sLEMueCwwLFAsaCksZi5jcmVhdGUoMCxnLnJhbmdlLnN0YXJ0Q29sLGoucm93cy0xLGcucmFuZ2UuZW5kQ29sLGcueCwwLFAsaCksZi5jcmVhdGUoZy5yYW5nZS5zdGFydFJvdywwLGcucmFuZ2UuZW5kUm93LE8uY29scy0xLDAsZy55LGMsQSksZi5jcmVhdGUoUi5yYW5nZS5zdGFydFJvdywwLFIucmFuZ2UuZW5kUm93LE8uY29scy0xLDAsQy55LGMsQSldfSkpO2Z1bmN0aW9uIEUodCxlKXtmb3IodmFyIHI9MDtyPGUubGVuZ3RoO3IrKyl7dmFyIG49ZVtyXTtuLmVudW1lcmFibGU9bi5lbnVtZXJhYmxlfHwhMSxuLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBuJiYobi53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsbi5rZXksbil9fWZ1bmN0aW9uIE0odCxlLHIpe3JldHVybiBlIGluIHQ/T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsZSx7dmFsdWU6cixlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMH0pOnRbZV09cix0fXZhciBMPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdChlLHIsbil7IWZ1bmN0aW9uKHQsZSl7aWYoISh0IGluc3RhbmNlb2YgZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX0odGhpcyx0KSxNKHRoaXMsXCJfd2lkdGhcIiwwKSxNKHRoaXMsXCJfaGVpZ2h0XCIsMCksTSh0aGlzLFwiX3NjYWxlXCIsMSksTSh0aGlzLFwiX3Jvd3NcIiwxMDApLE0odGhpcyxcIl9jb2xzXCIsMjYpLE0odGhpcyxcIl9yb3dIZWlnaHRcIiwyNSksTSh0aGlzLFwiX2NvbFdpZHRoXCIsMTAwKSxNKHRoaXMsXCJfc3RhcnRSb3dcIiwwKSxNKHRoaXMsXCJfc3RhcnRDb2xcIiwwKSxNKHRoaXMsXCJfc2Nyb2xsUm93c1wiLDApLE0odGhpcyxcIl9zY3JvbGxDb2xzXCIsMCksTSh0aGlzLFwiX3Jvd1wiLChmdW5jdGlvbigpe30pKSxNKHRoaXMsXCJfY29sXCIsKGZ1bmN0aW9uKCl7fSkpLE0odGhpcyxcIl9jZWxsXCIsKGZ1bmN0aW9uKCl7fSkpLE0odGhpcyxcIl9tZXJnZXNcIixbXSksTSh0aGlzLFwiX3N0eWxlc1wiLFtdKSxNKHRoaXMsXCJfbGluZVN0eWxlXCIse3dpZHRoOjEsY29sb3I6XCIjZTZlNmU2XCJ9KSxNKHRoaXMsXCJfY2VsbFN0eWxlXCIse2JnY29sb3I6XCIjZmZmZmZmXCIsYWxpZ246XCJsZWZ0XCIsdmFsaWduOlwibWlkZGxlXCIsdGV4dHdyYXA6ITAsdW5kZXJsaW5lOiExLHN0cmlrZXRocm91Z2g6ITEsY29sb3I6XCIjMGEwYTBhXCIsYm9sZDohMSxpdGFsaWM6ITEscm90YXRlOjAsZm9udFNpemU6OSxmb250TmFtZTpcIlNvdXJjZSBTYW5zIFByb1wifSksTSh0aGlzLFwiX3Jvd0hlYWRlclwiLHt3aWR0aDo2MCxjb2xzOjEsY2VsbDpmdW5jdGlvbih0LGUpe3JldHVybiB0KzF9LGdldCBjb2xXaWR0aCgpe3JldHVybiB0aGlzLndpZHRoL3RoaXMuY29sc319KSxNKHRoaXMsXCJfY29sSGVhZGVyXCIse2hlaWdodDoyNSxyb3dzOjEsY2VsbDpmdW5jdGlvbih0LGUpe3JldHVybiBpKGUpfSxnZXQgcm93SGVpZ2h0KCl7cmV0dXJuIHRoaXMuaGVpZ2h0L3RoaXMucm93c319KSxNKHRoaXMsXCJfaGVhZGVyTGluZVN0eWxlXCIse3dpZHRoOjEsY29sb3I6XCIjZTZlNmU2XCJ9KSxNKHRoaXMsXCJfaGVhZGVyQ2VsbFN0eWxlXCIse2JnY29sb3I6XCIjZjRmNWY4XCIsYWxpZ246XCJjZW50ZXJcIix2YWxpZ246XCJtaWRkbGVcIix0ZXh0d3JhcDohMCx1bmRlcmxpbmU6ITEsc3RyaWtldGhyb3VnaDohMSxjb2xvcjpcIiM1ODU3NTdcIixib2xkOiExLGl0YWxpYzohMSxyb3RhdGU6MCxmb250U2l6ZTo5LGZvbnROYW1lOlwiU291cmNlIFNhbnMgUHJvXCJ9KSxNKHRoaXMsXCJfZnJlZXplXCIsWzAsMF0pLE0odGhpcyxcIl9mcmVlemVMaW5lU3R5bGVcIix7d2lkdGg6Mixjb2xvcjpcIiNkOGQ4ZDhcIn0pLE0odGhpcyxcIl92aWV3cG9ydFwiLG51bGwpO3ZhciBvPVwic3RyaW5nXCI9PXR5cGVvZiBlP2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZSk6ZTtpZighbyl0aHJvdyBuZXcgRXJyb3IoXCJ0YXJnZXQgZXJyb3JcIik7dGhpcy5fdGFyZ2V0PW8sdGhpcy5fd2lkdGg9cix0aGlzLl9oZWlnaHQ9bn12YXIgZSxyO3JldHVybiBlPXQsKHI9W3trZXk6XCJyZW5kZXJcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLl92aWV3cG9ydD1uZXcgSCh0aGlzKSxmdW5jdGlvbih0KXt2YXIgZT10Ll93aWR0aCxyPXQuX2hlaWdodCxuPXQuX3RhcmdldCxpPXQuX3NjYWxlLG89dC5fdmlld3BvcnQsYT10Ll9mcmVlemUsbD10Ll9yb3dIZWFkZXIscz10Ll9jb2xIZWFkZXI7aWYobyl7dmFyIHU9bmV3IHYobixpKTt1LnNpemUoZSxyKTt2YXIgYz1iKG8uYXJlYXMsNCksaD1jWzBdLHk9Y1sxXSxkPWNbMl0sdz1jWzNdLGc9YihvLmhlYWRlckFyZWFzLDQpLHA9Z1swXSxfPWdbMV0sbT1nWzJdLGs9Z1szXTtPKHUsdyx0KSxPKHUsaCx0KSxQKHUscCx0KSxPKHUsZCx0KSxqKHUsayx0KSxPKHUseSx0KSxQKHUsXyx0KSxqKHUsbSx0KTt2YXIgeD1iKGEsMiksUz14WzBdLFQ9eFsxXTsoUz4wfHxUPjApJiZDKHUsdC5fZnJlZXplTGluZVN0eWxlLChmdW5jdGlvbigpe1M+MCYmdS5saW5lKDAsdy55LGUsdy55KSxUPjAmJnUubGluZSh3LngsMCx3Lngscil9KSk7dmFyIEE9eS54LEk9eS55O2lmKEE+MCYmST4wKXt2YXIgSD1mLmNyZWF0ZSgwLDAsMCwwLDAsMCwoZnVuY3Rpb24oKXtyZXR1cm4gcy5oZWlnaHR9KSwoZnVuY3Rpb24oKXtyZXR1cm4gbC53aWR0aH0pKTtSKHUsSCwoZnVuY3Rpb24oKXtyZXR1cm5cIlwifSksdC5faGVhZGVyQ2VsbFN0eWxlLHQuX2hlYWRlckxpbmVTdHlsZSx0Ll9zdHlsZXMpfX19KHRoaXMpLHRoaXN9fSx7a2V5Olwid2lkdGhcIix2YWx1ZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fd2lkdGg9dCx0aGlzfX0se2tleTpcImhlaWdodFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9oZWlnaHQ9dCx0aGlzfX0se2tleTpcInNjYWxlXCIsdmFsdWU6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX3NjYWxlPXQsdGhpc319LHtrZXk6XCJyb3dzXCIsdmFsdWU6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX3Jvd3M9dCx0aGlzfX0se2tleTpcImNvbHNcIix2YWx1ZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fY29scz10LHRoaXN9fSx7a2V5Olwicm93SGVpZ2h0XCIsdmFsdWU6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX3Jvd0hlaWdodD10LHRoaXN9fSx7a2V5OlwiY29sV2lkdGhcIix2YWx1ZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fY29sV2lkdGg9dCx0aGlzfX0se2tleTpcInN0YXJ0Um93XCIsdmFsdWU6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX3N0YXJ0Um93PXQsdGhpc319LHtrZXk6XCJzdGFydENvbFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9zdGFydENvbD10LHRoaXN9fSx7a2V5Olwic2Nyb2xsUm93c1wiLHZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9zY3JvbGxSb3dzPXQsdGhpc319LHtrZXk6XCJzY3JvbGxDb2xzXCIsdmFsdWU6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX3Njcm9sbENvbHM9dCx0aGlzfX0se2tleTpcInJvd1wiLHZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9yb3c9dCx0aGlzfX0se2tleTpcImNvbFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9jb2w9dCx0aGlzfX0se2tleTpcImNlbGxcIix2YWx1ZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fY2VsbD10LHRoaXN9fSx7a2V5OlwibWVyZ2VzXCIsdmFsdWU6ZnVuY3Rpb24odCl7cmV0dXJuIHQmJih0aGlzLl9tZXJnZXM9dCksdGhpc319LHtrZXk6XCJzdHlsZXNcIix2YWx1ZTpmdW5jdGlvbih0KXtyZXR1cm4gdCYmKHRoaXMuX3N0eWxlcz10KSx0aGlzfX0se2tleTpcImxpbmVTdHlsZVwiLHZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3QuYXNzaWduKHRoaXMuX2xpbmVTdHlsZSx0KSx0aGlzfX0se2tleTpcImNlbGxTdHlsZVwiLHZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3QuYXNzaWduKHRoaXMuX2NlbGxTdHlsZSx0KSx0aGlzfX0se2tleTpcInJvd0hlYWRlclwiLHZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiB0JiZPYmplY3QuYXNzaWduKHRoaXMuX3Jvd0hlYWRlcix0KSx0aGlzfX0se2tleTpcImNvbEhlYWRlclwiLHZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiB0JiZPYmplY3QuYXNzaWduKHRoaXMuX2NvbEhlYWRlcix0KSx0aGlzfX0se2tleTpcImhlYWRlckxpbmVTdHlsZVwiLHZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3QuYXNzaWduKHRoaXMuX2hlYWRlckxpbmVTdHlsZSx0KSx0aGlzfX0se2tleTpcImhlYWRlckNlbGxTdHlsZVwiLHZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiB0JiZPYmplY3QuYXNzaWduKHRoaXMuX2hlYWRlckNlbGxTdHlsZSx0KSx0aGlzfX0se2tleTpcImZyZWV6ZVwiLHZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiB0JiYodGhpcy5fZnJlZXplPWEodCkpLHRoaXN9fSx7a2V5OlwiZnJlZXplTGluZVN0eWxlXCIsdmFsdWU6ZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdC5hc3NpZ24odGhpcy5fZnJlZXplTGluZVN0eWxlLHQpLHRoaXN9fV0pJiZFKGUucHJvdG90eXBlLHIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwicHJvdG90eXBlXCIse3dyaXRhYmxlOiExfSksdH0oKTtmdW5jdGlvbiBEKHQsZSxyKXtyZXR1cm4gbmV3IEwodCxlLHIpfW1vZHVsZS5leHBvcnRzPWV9KSgpOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0Ly8gbm8gbW9kdWxlLmlkIG5lZWRlZFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCIvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSAoZXhwb3J0cykgPT4ge1xuXHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblx0fVxuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xufTsiLCJleHBvcnQgZnVuY3Rpb24gc3VtKG1pbjogbnVtYmVyLCBtYXg6IG51bWJlciwgZ2V0djogKGluZGV4OiBudW1iZXIpID0+IG51bWJlcikge1xuICBsZXQgdG90YWwgPSAwO1xuICBmb3IgKGxldCBpID0gbWluOyBpIDwgbWF4OyBpICs9IDEpIHRvdGFsICs9IGdldHYoaSk7XG4gIHJldHVybiB0b3RhbDtcbn1cbiIsImltcG9ydCB7IENlbGwsIENlbGxTdHlsZSB9IGZyb20gJ3RhYmxlLXJlbmRlci9kaXN0L3R5cGVzJztcbmltcG9ydCB7IHN1bSB9IGZyb20gJy4vaGVscGVyJztcblxuZXhwb3J0IHR5cGUgRGF0YVJvdyA9IHtcbiAgaGVpZ2h0OiBudW1iZXI7XG4gIGhpZGU/OiBib29sZWFuO1xuICBzdHlsZT86IG51bWJlcjtcbn07XG5leHBvcnQgdHlwZSBEYXRhUm93cyA9IHtcbiAgbGVuOiBudW1iZXI7XG4gIFtrZXk6IG51bWJlcl06IERhdGFSb3c7XG59O1xuXG5leHBvcnQgdHlwZSBEYXRhQ29sID0ge1xuICB3aWR0aDogbnVtYmVyO1xuICBoaWRlPzogYm9vbGVhbjtcbiAgc3R5bGU/OiBudW1iZXI7XG59O1xuZXhwb3J0IHR5cGUgRGF0YUNvbHMgPSB7XG4gIGxlbjogbnVtYmVyO1xuICBba2V5OiBudW1iZXJdOiBEYXRhQ29sO1xufTtcblxuZXhwb3J0IHR5cGUgRGF0YUNlbGxzID0ge1xuICBba2V5OiBudW1iZXJdOiB7XG4gICAgW2tleTogbnVtYmVyXTogQ2VsbDtcbiAgfTtcbn07XG5cbmV4cG9ydCB0eXBlIFRhYmxlRGF0YSA9IHtcbiAgcm93czogRGF0YVJvd3M7XG4gIGNvbHM6IERhdGFDb2xzO1xuICByb3dIZWlnaHQ6IG51bWJlcjtcbiAgY29sV2lkdGg6IG51bWJlcjtcbiAgc3R5bGU6IENlbGxTdHlsZTtcbiAgc3R5bGVzPzogQ2VsbFN0eWxlW107XG4gIGZyZWV6ZT86IHN0cmluZztcbiAgc2Nyb2xsPzogc3RyaW5nO1xuICBtZXJnZXM/OiBzdHJpbmdbXTtcbiAgY2VsbHM/OiBEYXRhQ2VsbHM7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gc3R5bGUoeyBzdHlsZXMgfTogVGFibGVEYXRhLCBpbmRleD86IG51bWJlcikge1xuICBpZiAoIWluZGV4KSByZXR1cm4gdW5kZWZpbmVkO1xuICByZXR1cm4gc3R5bGVzID8gc3R5bGVzW2luZGV4XSA6IHVuZGVmaW5lZDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNvbCh7IGNvbHMsIGNvbFdpZHRoIH06IFRhYmxlRGF0YSwgaW5kZXg6IG51bWJlcikge1xuICByZXR1cm4gKGNvbHMgJiYgY29sc1tpbmRleF0pIHx8IHsgd2lkdGg6IGNvbFdpZHRoIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjb2xzV2lkdGgoZGF0YTogVGFibGVEYXRhKSB7XG4gIHJldHVybiBzdW0oMCwgZGF0YS5jb2xzLmxlbiwgKGkpID0+IGNvbChkYXRhLCBpKS53aWR0aCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByb3coeyByb3dzLCByb3dIZWlnaHQgfTogVGFibGVEYXRhLCBpbmRleDogbnVtYmVyKSB7XG4gIHJldHVybiAocm93cyAmJiByb3dzW2luZGV4XSkgfHwgeyBoZWlnaHQ6IHJvd0hlaWdodCB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcm93c0hlaWdodChkYXRhOiBUYWJsZURhdGEpIHtcbiAgcmV0dXJuIHN1bSgwLCBkYXRhLnJvd3MubGVuLCAoaSkgPT4gcm93KGRhdGEsIGkpLmhlaWdodCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjZWxsKHsgY2VsbHMgfTogVGFibGVEYXRhLCByb3dJbmRleDogbnVtYmVyLCBjb2xJbmRleDogbnVtYmVyKSB7XG4gIHJldHVybiBjZWxscyA/IGNlbGxzW3Jvd0luZGV4XVtjb2xJbmRleF0gOiB1bmRlZmluZWQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkZWZhdWx0RGF0YSgpOiBUYWJsZURhdGEge1xuICByZXR1cm4ge1xuICAgIHJvd3M6IHtcbiAgICAgIGxlbjogMTAwLFxuICAgIH0sXG4gICAgY29sczoge1xuICAgICAgbGVuOiAyNixcbiAgICB9LFxuICAgIHJvd0hlaWdodDogMjUsXG4gICAgY29sV2lkdGg6IDEwMCxcbiAgICBzdHlsZToge1xuICAgICAgZm9udE5hbWU6ICdIZWx2ZXRpY2EnLFxuICAgICAgZm9udFNpemU6IDEwLFxuICAgICAgY29sb3I6ICcjMzMzJyxcbiAgICAgIGJnY29sb3I6ICcjZmZmJyxcbiAgICAgIGFsaWduOiAnbGVmdCcsXG4gICAgICB2YWxpZ246ICdtaWRkbGUnLFxuICAgICAgdGV4dHdyYXA6IGZhbHNlLFxuICAgICAgYm9sZDogZmFsc2UsXG4gICAgICBpdGFsaWM6IGZhbHNlLFxuICAgICAgdW5kZXJsaW5lOiBmYWxzZSxcbiAgICAgIHN0cmlrZXRocm91Z2g6IGZhbHNlLFxuICAgIH0sXG4gIH07XG59XG4iLCJmdW5jdGlvbiBjcmVhdGVGcmFnbWVudCguLi5ub2RlczogKEVsZW1lbnQgfCBOb2RlIHwgc3RyaW5nKVtdKSB7XG4gIGNvbnN0IGZyYWdtZW50ID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpO1xuICBub2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XG4gICAgbGV0IG5ub2RlOiBOb2RlO1xuICAgIGlmIChub2RlIGluc3RhbmNlb2YgRWxlbWVudCkgbm5vZGUgPSBub2RlLl87XG4gICAgZWxzZSBpZiAodHlwZW9mIG5vZGUgPT09ICdzdHJpbmcnKSBubm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKG5vZGUpO1xuICAgIGVsc2Ugbm5vZGUgPSBub2RlO1xuICAgIGZyYWdtZW50LmFwcGVuZENoaWxkKG5ub2RlKTtcbiAgfSk7XG4gIHJldHVybiBmcmFnbWVudDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRWxlbWVudCB7XG4gIF86IEhUTUxFbGVtZW50O1xuICBfZGF0YSA9IG5ldyBNYXAoKTtcblxuICBjb25zdHJ1Y3Rvcih0YWc6IHN0cmluZyB8IEhUTUxFbGVtZW50LCBjbGFzc05hbWU/OiBzdHJpbmcgfCBzdHJpbmdbXSB8IE9iamVjdCkge1xuICAgIHRoaXMuXyA9IHRhZyBpbnN0YW5jZW9mIE5vZGUgPyB0YWcgOiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHRhZyk7XG4gICAgaWYgKGNsYXNzTmFtZSkge1xuICAgICAgaWYgKHR5cGVvZiBjbGFzc05hbWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHRoaXMuXy5jbGFzc05hbWUgPSBjbGFzc05hbWU7XG4gICAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoY2xhc3NOYW1lKSkge1xuICAgICAgICB0aGlzLl8uY2xhc3NOYW1lID0gY2xhc3NOYW1lLmpvaW4oJyAnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZvciAobGV0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhjbGFzc05hbWUpKSB7XG4gICAgICAgICAgaWYgKHZhbHVlKSB0aGlzLl8uY2xhc3NMaXN0LmFkZChrZXkpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZGF0YShrZXk6IHN0cmluZyk6IGFueTtcbiAgZGF0YShrZXk6IHN0cmluZywgdmFsdWU6IGFueSk6IEVsZW1lbnQ7XG4gIGRhdGEoa2V5OiBzdHJpbmcsIHZhbHVlPzogYW55KSB7XG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICB0aGlzLl9kYXRhLnNldChrZXksIHZhbHVlKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gdGhpcy5fZGF0YS5nZXQoa2V5KTtcbiAgICB9XG4gIH1cblxuICBvbihldmVudE5hbWU6IHN0cmluZywgaGFuZGxlcjogKGV2dDogRXZlbnQpID0+IHZvaWQpIHtcbiAgICBjb25zdCBbZXZ0TmFtZSwgLi4ucHJvcF0gPSBldmVudE5hbWUuc3BsaXQoJy4nKTtcbiAgICB0aGlzLl8uYWRkRXZlbnRMaXN0ZW5lcihldnROYW1lLCAoZXZ0KSA9PiB7XG4gICAgICBoYW5kbGVyKGV2dCk7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHByb3AubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgaWYgKHByb3BbaV0gPT09ICdzdG9wJykge1xuICAgICAgICAgIGV2dC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocHJvcFtpXSA9PT0gJ3ByZXZlbnQnKSB7XG4gICAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGF0dHIoa2V5OiBzdHJpbmcpOiBzdHJpbmc7XG4gIGF0dHIoa2V5OiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcpOiBFbGVtZW50O1xuICBhdHRyKGtleTogc3RyaW5nLCB2YWx1ZT86IHN0cmluZyk6IGFueSB7XG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICB0aGlzLl8uc2V0QXR0cmlidXRlKGtleSwgdmFsdWUpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLl8uZ2V0QXR0cmlidXRlKGtleSk7XG4gIH1cblxuICBjc3Moa2V5OiBzdHJpbmcpOiBzdHJpbmc7XG4gIGNzcyhrZXk6IHN0cmluZywgdmFsdWU6IHN0cmluZyk6IEVsZW1lbnQ7XG4gIGNzcyhrZXk6IHN0cmluZywgdmFsdWU/OiBzdHJpbmcpOiBhbnkge1xuICAgIGlmICh2YWx1ZSkge1xuICAgICAgdGhpcy5fLnN0eWxlLnNldFByb3BlcnR5KGtleSwgdmFsdWUpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLl8uc3R5bGUuZ2V0UHJvcGVydHlWYWx1ZShrZXkpO1xuICB9XG5cbiAgcmVjdCgpIHtcbiAgICByZXR1cm4gdGhpcy5fLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICB9XG5cbiAgc2hvdygpIHtcbiAgICB0aGlzLmNzcygnZGlzcGxheScsICdibG9jaycpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgaGlkZSgpIHtcbiAgICB0aGlzLmNzcygnZGlzcGxheScsICdoaWRlJyk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBzY3JvbGx4KCk6IG51bWJlcjtcbiAgc2Nyb2xseCh2YWx1ZTogbnVtYmVyKTogRWxlbWVudDtcbiAgc2Nyb2xseCh2YWx1ZT86IG51bWJlcik6IGFueSB7XG4gICAgY29uc3QgeyBfIH0gPSB0aGlzO1xuICAgIGlmICh2YWx1ZSkge1xuICAgICAgXy5zY3JvbGxMZWZ0ID0gdmFsdWU7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgcmV0dXJuIF8uc2Nyb2xsTGVmdDtcbiAgfVxuXG4gIHNjcm9sbHkoKTogbnVtYmVyO1xuICBzY3JvbGx5KHZhbHVlOiBudW1iZXIpOiBFbGVtZW50O1xuICBzY3JvbGx5KHZhbHVlPzogbnVtYmVyKTogYW55IHtcbiAgICBjb25zdCB7IF8gfSA9IHRoaXM7XG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICBfLnNjcm9sbFRvcCA9IHZhbHVlO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHJldHVybiBfLnNjcm9sbFRvcDtcbiAgfVxuXG4gIGFmdGVyKC4uLm5vZGVzOiAoRWxlbWVudCB8IE5vZGUgfCBzdHJpbmcpW10pIHtcbiAgICB0aGlzLl8uYWZ0ZXIoY3JlYXRlRnJhZ21lbnQoLi4ubm9kZXMpKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGJlZm9yZSguLi5ub2RlczogKEVsZW1lbnQgfCBOb2RlIHwgc3RyaW5nKVtdKSB7XG4gICAgdGhpcy5fLmJlZm9yZShjcmVhdGVGcmFnbWVudCguLi5ub2RlcykpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgYXBwZW5kKC4uLm5vZGVzOiAoRWxlbWVudCB8IE5vZGUgfCBzdHJpbmcpW10pIHtcbiAgICB0aGlzLl8uYXBwZW5kKGNyZWF0ZUZyYWdtZW50KC4uLm5vZGVzKSk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICByZW1vdmUoLi4ubm9kZXM6IChFbGVtZW50IHwgTm9kZSlbXSkge1xuICAgIG5vZGVzLmZvckVhY2goKG5vZGUpID0+IHtcbiAgICAgIHRoaXMuXy5yZW1vdmVDaGlsZChub2RlIGluc3RhbmNlb2YgRWxlbWVudCA/IG5vZGUuXyA6IG5vZGUpO1xuICAgIH0pO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoKHRhZzogc3RyaW5nIHwgSFRNTEVsZW1lbnQsIGNsYXNzTmFtZT86IHN0cmluZyB8IHN0cmluZ1tdIHwgT2JqZWN0KSB7XG4gIHJldHVybiBuZXcgRWxlbWVudCh0YWcsIGNsYXNzTmFtZSk7XG59XG4iLCJpbXBvcnQgeyBleHByMnh5LCB4eTJleHByIH0gZnJvbSAndGFibGUtcmVuZGVyJztcbmltcG9ydCB7IGNvbCwgcm93LCBUYWJsZURhdGEgfSBmcm9tICcuL2RhdGEnO1xuXG5mdW5jdGlvbiBzY3JvbGxUbyhcbiAgZGF0YTogVGFibGVEYXRhLFxuICB2YWx1ZTogbnVtYmVyLFxuICBvbGRWYWx1ZTogW251bWJlciwgbnVtYmVyXSxcbiAgaW5kZXg6IG51bWJlcixcbiAgZ2V0VmFsdWU6IChpbmRleDogbnVtYmVyKSA9PiBudW1iZXJcbik6IFtib29sZWFuLCBudW1iZXIsIG51bWJlcl0gfCB1bmRlZmluZWQge1xuICBpZiAoIWRhdGEuc2Nyb2xsKSByZXR1cm47XG4gIGNvbnN0IGluZGV4ZXMgPSBleHByMnh5KGRhdGEuc2Nyb2xsKTtcbiAgbGV0IG5ld1ZhbHVlID0gb2xkVmFsdWVbaW5kZXhdO1xuICBsZXQgY2hhbmdlZCA9IGZhbHNlO1xuICBpZiAodmFsdWUgPiBvbGRWYWx1ZVtpbmRleF0pIHtcbiAgICBmb3IgKGxldCBpID0gaW5kZXhlc1tpbmRleF07IGkgPCBkYXRhLnJvd3MubGVuOyBpICs9IDEpIHtcbiAgICAgIGlmIChuZXdWYWx1ZSA+IHZhbHVlKSBicmVhaztcbiAgICAgIG5ld1ZhbHVlICs9IGdldFZhbHVlKGkpO1xuICAgICAgaW5kZXhlc1tpbmRleF0gPSBpICsgMTtcbiAgICAgIGNoYW5nZWQgPSB0cnVlO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBmb3IgKGxldCBpID0gaW5kZXhlc1tpbmRleF07IGkgPiAwOyBpIC09IDEpIHtcbiAgICAgIGlmIChuZXdWYWx1ZSA8IHZhbHVlKSBicmVhaztcbiAgICAgIG5ld1ZhbHVlIC09IGdldFZhbHVlKGkpO1xuICAgICAgaW5kZXhlc1tpbmRleF0gPSBpIC0gMTtcbiAgICAgIGNoYW5nZWQgPSB0cnVlO1xuICAgIH1cbiAgfVxuICBkYXRhLnNjcm9sbCA9IHh5MmV4cHIoLi4uaW5kZXhlcyk7XG4gIG9sZFZhbHVlW2luZGV4XSA9IHZhbHVlO1xuICByZXR1cm4gW2NoYW5nZWQsIC4uLmluZGV4ZXNdO1xufVxuXG5mdW5jdGlvbiBzdGVwKFxuICBkYXRhOiBUYWJsZURhdGEsXG4gIGluZGV4OiBudW1iZXIsXG4gIG46IG51bWJlcixcbiAgb2xkVmFsdWU6IFtudW1iZXIsIG51bWJlcl0sXG4gIGdldFZhbHVlOiAoaW5kZXg6IG51bWJlcikgPT4gbnVtYmVyXG4pOiBudW1iZXIgfCB1bmRlZmluZWQge1xuICBpZiAoIWRhdGEuc2Nyb2xsKSByZXR1cm47XG4gIGNvbnN0IGluZGV4ZXMgPSBleHByMnh5KGRhdGEuc2Nyb2xsKTtcbiAgY29uc3Qgc3RhcnQgPSBpbmRleGVzW2luZGV4XTtcblxuICBsZXQgZW5kID0gc3RhcnQgKyBuO1xuICBpZiAoZW5kIDw9IDApIGVuZCA9IDA7XG4gIGlmIChlbmQgPiBkYXRhLnJvd3MubGVuKSBlbmQgPSBkYXRhLnJvd3MubGVuO1xuXG4gIGxldCBuZXdWYWx1ZSA9IG9sZFZhbHVlW2luZGV4XTtcbiAgaWYgKG4gPiAwKSB7XG4gICAgZm9yIChsZXQgaSA9IHN0YXJ0OyBpIDwgZW5kOyBpICs9IDEpIHtcbiAgICAgIGlmIChpID49IGRhdGEucm93cy5sZW4pIGJyZWFrO1xuICAgICAgbmV3VmFsdWUgKz0gZ2V0VmFsdWUoaSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGZvciAobGV0IGkgPSBlbmQ7IGkgPCBzdGFydDsgaSArPSAxKSB7XG4gICAgICBuZXdWYWx1ZSAtPSBnZXRWYWx1ZShpKTtcbiAgICB9XG4gIH1cbiAgaW5kZXhlc1tpbmRleF0gPSBlbmQ7XG4gIGRhdGEuc2Nyb2xsID0geHkyZXhwciguLi5pbmRleGVzKTtcbiAgb2xkVmFsdWVbaW5kZXhdID0gbmV3VmFsdWU7XG4gIHJldHVybiBpbmRleGVzW2luZGV4XTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2Nyb2xsIHtcbiAgLy8gW3gsIHldXG4gIF92YWx1ZTogW251bWJlciwgbnVtYmVyXSA9IFswLCAwXTtcbiAgX2RhdGE6ICgpID0+IFRhYmxlRGF0YTtcblxuICBjb25zdHJ1Y3RvcihkYXRhOiAoKSA9PiBUYWJsZURhdGEpIHtcbiAgICB0aGlzLl9kYXRhID0gZGF0YTtcbiAgfVxuXG4gIHgobjogbnVtYmVyKSB7XG4gICAgcmV0dXJuIHNjcm9sbFRvKHRoaXMuX2RhdGEoKSwgbiwgdGhpcy5fdmFsdWUsIDAsIChpKSA9PiBjb2wodGhpcy5fZGF0YSgpLCBpKS53aWR0aCk7XG4gIH1cblxuICB5KG46IG51bWJlcikge1xuICAgIHJldHVybiBzY3JvbGxUbyh0aGlzLl9kYXRhKCksIG4sIHRoaXMuX3ZhbHVlLCAxLCAoaSkgPT4gcm93KHRoaXMuX2RhdGEoKSwgaSkuaGVpZ2h0KTtcbiAgfVxuXG4gIHN0ZXBDb2wobjogbnVtYmVyKSB7XG4gICAgcmV0dXJuIHN0ZXAodGhpcy5fZGF0YSgpLCAwLCBuLCB0aGlzLl92YWx1ZSwgKGkpID0+IGNvbCh0aGlzLl9kYXRhKCksIGkpLndpZHRoKTtcbiAgfVxuXG4gIHN0ZXBSb3cobjogbnVtYmVyKSB7XG4gICAgcmV0dXJuIHN0ZXAodGhpcy5fZGF0YSgpLCAxLCBuLCB0aGlzLl92YWx1ZSwgKGkpID0+IHJvdyh0aGlzLl9kYXRhKCksIGkpLmhlaWdodCk7XG4gIH1cbn1cbiIsImltcG9ydCB7IHN0eWxlUHJlZml4IH0gZnJvbSAnLi4vY29uZmlnJztcbmltcG9ydCBFbGVtZW50LCB7IGggfSBmcm9tICcuLi9lbGVtZW50JztcblxuZXhwb3J0IHR5cGUgU2Nyb2xsYmFyQ2hhbmdlciA9ICgodmFsdWU6IG51bWJlciwgZXZlbnQ6IEV2ZW50KSA9PiB2b2lkKSB8IG51bGw7XG5cbmNvbnN0IHR5cGVDc3NLZXlzID0geyB2ZXJ0aWNhbDogJ2hlaWdodCcsIGhvcml6b250YWw6ICd3aWR0aCcgfTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2Nyb2xsYmFyIHtcbiAgXzogRWxlbWVudDtcbiAgX2NvbnRlbnQ6IEVsZW1lbnQ7XG5cbiAgX3R5cGU6ICd2ZXJ0aWNhbCcgfCAnaG9yaXpvbnRhbCc7XG5cbiAgX2NoYW5nZTogU2Nyb2xsYmFyQ2hhbmdlciA9IG51bGw7XG5cbiAgY29uc3RydWN0b3IodHlwZTogJ3ZlcnRpY2FsJyB8ICdob3Jpem9udGFsJykge1xuICAgIHRoaXMuX3R5cGUgPSB0eXBlO1xuICAgIHRoaXMuX2NvbnRlbnQgPSBoKCdkaXYnLCAnY29udGVudCcpO1xuICAgIHRoaXMuXyA9IGgoJ2RpdicsIGAke3N0eWxlUHJlZml4fS1zY3JvbGxiYXIgJHt0eXBlfWApXG4gICAgICAuYXBwZW5kKHRoaXMuX2NvbnRlbnQpXG4gICAgICAub24oJ3Njcm9sbC5zdG9wJywgKGV2dCkgPT4ge1xuICAgICAgICBjb25zdCB7IHNjcm9sbFRvcCwgc2Nyb2xsTGVmdCB9OiBhbnkgPSBldnQudGFyZ2V0O1xuICAgICAgICAvLyBjb25zb2xlLmxvZygnc2Nyb2xsVG9wOicsIHNjcm9sbFRvcCk7XG4gICAgICAgIGlmICh0aGlzLl9jaGFuZ2UpIHtcbiAgICAgICAgICB0aGlzLl9jaGFuZ2UodHlwZSA9PT0gJ3ZlcnRpY2FsJyA/IHNjcm9sbFRvcCA6IHNjcm9sbExlZnQsIGV2dCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICB9XG5cbiAgY2hhbmdlKHZhbHVlOiBTY3JvbGxiYXJDaGFuZ2VyKSB7XG4gICAgdGhpcy5fY2hhbmdlID0gdmFsdWU7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBzY3JvbGwoKTogYW55O1xuICBzY3JvbGwodmFsdWU6IG51bWJlcik6IFNjcm9sbGJhcjtcbiAgc2Nyb2xsKHZhbHVlPzogbnVtYmVyKTogYW55IHtcbiAgICBjb25zdCB7IF8sIF90eXBlIH0gPSB0aGlzO1xuICAgIGlmICh2YWx1ZSkge1xuICAgICAgaWYgKF90eXBlID09PSAndmVydGljYWwnKSB7XG4gICAgICAgIF8uc2Nyb2xseSh2YWx1ZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBfLnNjcm9sbHgodmFsdWUpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHJldHVybiBfdHlwZSA9PT0gJ3ZlcnRpY2FsJyA/IF8uc2Nyb2xseSgpIDogXy5zY3JvbGx4KCk7XG4gIH1cblxuICAvLyB1cGRhdGUgdGhpcyBzaXplXG4gIHJlc2l6ZSh2YWx1ZTogbnVtYmVyLCBjb250ZW50VmFsdWU6IG51bWJlcikge1xuICAgIGlmIChjb250ZW50VmFsdWUgPiB2YWx1ZSAtIDEpIHtcbiAgICAgIGNvbnN0IGNzc0tleSA9IHR5cGVDc3NLZXlzW3RoaXMuX3R5cGVdO1xuICAgICAgdGhpcy5fY29udGVudC5jc3MoY3NzS2V5LCBgJHtjb250ZW50VmFsdWV9cHhgKTtcbiAgICAgIHRoaXMuXy5jc3MoY3NzS2V5LCBgJHt2YWx1ZX1weGApLnNob3coKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fLmhpZGUoKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbn1cbiIsImV4cG9ydCBjb25zdCBzdHlsZVByZWZpeCA9ICd3b2xmLXRhYmxlJztcbiIsImltcG9ydCAnLi9zdHlsZS5pbmRleC5sZXNzJztcbmltcG9ydCBUYWJsZVJlbmRlciBmcm9tICd0YWJsZS1yZW5kZXInO1xuaW1wb3J0IHsgQ2VsbFN0eWxlLCBDb2xIZWFkZXIsIFJvd0hlYWRlciB9IGZyb20gJ3RhYmxlLXJlbmRlci9kaXN0L3R5cGVzJztcbmltcG9ydCB7IGRlZmF1bHREYXRhLCBUYWJsZURhdGEsIHJvdywgY29sLCBjZWxsLCBjb2xzV2lkdGgsIHJvd3NIZWlnaHQgfSBmcm9tICcuL2RhdGEnO1xuaW1wb3J0IEVsZW1lbnQsIHsgaCB9IGZyb20gJy4vZWxlbWVudCc7XG5pbXBvcnQgU2Nyb2xsIGZyb20gJy4vc2Nyb2xsJztcbmltcG9ydCBTY3JvbGxiYXIgZnJvbSAnLi9zY3JvbGxiYXInO1xuXG5leHBvcnQgdHlwZSBUYWJsZU9wdGlvbnMgPSB7XG4gIHJvd0hlaWdodD86IG51bWJlcjtcbiAgY29sV2lkdGg/OiBudW1iZXI7XG4gIHJvd3M/OiBudW1iZXI7XG4gIGNvbHM/OiBudW1iZXI7XG4gIGNlbGxTdHlsZT86IFBhcnRpYWw8Q2VsbFN0eWxlPjtcbiAgc2Nyb2xsYWJsZT86IGJvb2xlYW47XG4gIHJlc2l6YWJsZT86IGJvb2xlYW47XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUYWJsZSB7XG4gIC8vIGZvciByZW5kZXJcbiAgX2NvbEhlYWRlcjogQ29sSGVhZGVyIHwgdW5kZWZpbmVkO1xuICAvLyBmb3IgcmVuZGVyXG4gIF9yb3dIZWFkZXI6IFJvd0hlYWRlciB8IHVuZGVmaW5lZDtcblxuICBfd2lkdGg6ICgpID0+IG51bWJlcjtcblxuICBfaGVpZ2h0OiAoKSA9PiBudW1iZXI7XG5cbiAgX2NvbnRhaW5lcjogRWxlbWVudDtcblxuICBfZGF0YTogVGFibGVEYXRhO1xuXG4gIF9yZW5kZXI6IFRhYmxlUmVuZGVyO1xuXG4gIC8vIF9zY3JvbGw6IFNjcm9sbDtcbiAgLy8gc2Nyb2xsYmFyXG4gIF92U2Nyb2xsYmFyOiBTY3JvbGxiYXIgfCBudWxsID0gbnVsbDtcbiAgX2hTY3JvbGxiYXI6IFNjcm9sbGJhciB8IG51bGwgPSBudWxsO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIGVsZW1lbnQ6IEhUTUxFbGVtZW50IHwgc3RyaW5nLFxuICAgIHdpZHRoOiAoKSA9PiBudW1iZXIsXG4gICAgaGVpZ2h0OiAoKSA9PiBudW1iZXIsXG4gICAgb3B0aW9ucz86IFRhYmxlT3B0aW9uc1xuICApIHtcbiAgICB0aGlzLl93aWR0aCA9IHdpZHRoO1xuICAgIHRoaXMuX2hlaWdodCA9IGhlaWdodDtcbiAgICBjb25zdCBjb250YWluZXI6IEhUTUxFbGVtZW50IHwgbnVsbCA9XG4gICAgICB0eXBlb2YgZWxlbWVudCA9PT0gJ3N0cmluZycgPyBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGVsZW1lbnQpIDogZWxlbWVudDtcbiAgICBpZiAoY29udGFpbmVyID09PSBudWxsKSB0aHJvdyBuZXcgRXJyb3IoJ2ZpcnN0IGFyZ3VtZW50IGVycm9yJyk7XG4gICAgdGhpcy5fY29udGFpbmVyID0gaChjb250YWluZXIpO1xuICAgIHRoaXMuX2RhdGEgPSBkZWZhdWx0RGF0YSgpO1xuXG4gICAgLy8gdXBkYXRlIGRlZmF1bHQgZGF0YVxuICAgIGlmIChvcHRpb25zKSB7XG4gICAgICBpZiAob3B0aW9ucy5jb2xzKSB0aGlzLl9kYXRhLmNvbHMubGVuID0gb3B0aW9ucy5jb2xzO1xuICAgICAgaWYgKG9wdGlvbnMucm93cykgdGhpcy5fZGF0YS5yb3dzLmxlbiA9IG9wdGlvbnMucm93cztcbiAgICAgIGlmIChvcHRpb25zLnJvd0hlaWdodCkgdGhpcy5fZGF0YS5yb3dIZWlnaHQgPSBvcHRpb25zLnJvd0hlaWdodDtcbiAgICAgIGlmIChvcHRpb25zLmNvbFdpZHRoKSB0aGlzLl9kYXRhLmNvbFdpZHRoID0gb3B0aW9ucy5jb2xXaWR0aDtcbiAgICAgIGlmIChvcHRpb25zLmNlbGxTdHlsZSkgT2JqZWN0LmFzc2lnbih0aGlzLl9kYXRhLnN0eWxlLCBvcHRpb25zLmNlbGxTdHlsZSk7XG4gICAgfVxuXG4gICAgY29uc3QgY2FudmFzRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpO1xuICAgIHRoaXMuX3JlbmRlciA9IG5ldyBUYWJsZVJlbmRlcihjYW52YXNFbGVtZW50LCB3aWR0aCgpLCBoZWlnaHQoKSk7XG5cbiAgICB0aGlzLl9jb250YWluZXIuYXBwZW5kKGNhbnZhc0VsZW1lbnQpO1xuXG4gICAgaWYgKG9wdGlvbnM/LnNjcm9sbGFibGUpIHtcbiAgICAgIGNvbnN0IHNjcm9sbCA9IG5ldyBTY3JvbGwoKCkgPT4gdGhpcy5fZGF0YSk7XG4gICAgICAvLyBzY3JvbGxiYXJcbiAgICAgIHRoaXMuX3ZTY3JvbGxiYXIgPSBuZXcgU2Nyb2xsYmFyKCd2ZXJ0aWNhbCcpLmNoYW5nZSgodmFsdWUpID0+IHtcbiAgICAgICAgc2Nyb2xsLnkodmFsdWUpO1xuICAgICAgICB0aGlzLnJlbmRlcigpO1xuICAgICAgfSk7XG5cbiAgICAgIHRoaXMuX2hTY3JvbGxiYXIgPSBuZXcgU2Nyb2xsYmFyKCdob3Jpem9udGFsJykuY2hhbmdlKCh2YWx1ZSkgPT4ge1xuICAgICAgICBzY3JvbGwueCh2YWx1ZSk7XG4gICAgICAgIHRoaXMucmVuZGVyKCk7XG4gICAgICB9KTtcbiAgICAgIHRoaXMuX2NvbnRhaW5lci5hcHBlbmQodGhpcy5fdlNjcm9sbGJhci5fLCB0aGlzLl9oU2Nyb2xsYmFyLl8pO1xuICAgICAgdGFibGVSZXNpemVTY3JvbGxiYXJzKHRoaXMpO1xuICAgIH1cbiAgfVxuXG4gIGNvbEhlYWRlcih2OiBDb2xIZWFkZXIpIHtcbiAgICB0aGlzLl9jb2xIZWFkZXIgPSB2O1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgcm93SGVhZGVyKHY6IFJvd0hlYWRlcikge1xuICAgIHRoaXMuX3Jvd0hlYWRlciA9IHY7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBkYXRhKCk6IFRhYmxlRGF0YTtcbiAgZGF0YShkYXRhOiBUYWJsZURhdGEpOiBUYWJsZTtcbiAgZGF0YShkYXRhPzogYW55KTogYW55IHtcbiAgICBpZiAoZGF0YSkge1xuICAgICAgdGhpcy5fZGF0YSA9IGRhdGE7XG4gICAgICB0YWJsZVJlc2l6ZVNjcm9sbGJhcnModGhpcyk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHRoaXMuX2RhdGE7XG4gICAgfVxuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHRoaXMuX3JlbmRlclxuICAgICAgLmNvbEhlYWRlcih0aGlzLl9jb2xIZWFkZXIpXG4gICAgICAucm93SGVhZGVyKHRoaXMuX3Jvd0hlYWRlcilcbiAgICAgIC5tZXJnZXModGhpcy5fZGF0YS5tZXJnZXMpXG4gICAgICAuZnJlZXplKHRoaXMuX2RhdGEuZnJlZXplKVxuICAgICAgLnN0eWxlcyh0aGlzLl9kYXRhLnN0eWxlcylcbiAgICAgIC5yb3dzKHRoaXMuX2RhdGEucm93cy5sZW4pXG4gICAgICAuY29scyh0aGlzLl9kYXRhLmNvbHMubGVuKVxuICAgICAgLnJvdygoaW5kZXgpID0+IHJvdyh0aGlzLl9kYXRhLCBpbmRleCkpXG4gICAgICAuY29sKChpbmRleCkgPT4gY29sKHRoaXMuX2RhdGEsIGluZGV4KSlcbiAgICAgIC5jZWxsKChyLCBjKSA9PiBjZWxsKHRoaXMuX2RhdGEsIHIsIGMpKVxuICAgICAgLnJlbmRlcigpO1xuICB9XG59XG5cbi8vIG1ldGhvZHMgLS0tLSBzdGFydCAtLS0tXG5cbmZ1bmN0aW9uIHRhYmxlUmVzaXplU2Nyb2xsYmFycyh0OiBUYWJsZSkge1xuICBjb25zb2xlLmxvZygnY29udGVudC5zaXplOiAnLCByb3dzSGVpZ2h0KHQuX2RhdGEpLCBjb2xzV2lkdGgodC5fZGF0YSkpO1xuICBpZiAodC5fdlNjcm9sbGJhcikge1xuICAgIHQuX3ZTY3JvbGxiYXIucmVzaXplKHQuX2hlaWdodCgpLCByb3dzSGVpZ2h0KHQuX2RhdGEpKTtcbiAgfVxuICBpZiAodC5faFNjcm9sbGJhcikge1xuICAgIHQuX2hTY3JvbGxiYXIucmVzaXplKHQuX3dpZHRoKCkgLSAxNSwgY29sc1dpZHRoKHQuX2RhdGEpKTtcbiAgfVxufVxuXG4vLyBtZXRob2RzIC0tLS0gZW5kIC0tLS0tLVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlVGFibGUoXG4gIGVsZW1lbnQ6IEhUTUxFbGVtZW50IHwgc3RyaW5nLFxuICB3aWR0aDogKCkgPT4gbnVtYmVyLFxuICBoZWlnaHQ6ICgpID0+IG51bWJlcixcbiAgb3B0aW9ucz86IFRhYmxlT3B0aW9uc1xuKTogVGFibGUge1xuICByZXR1cm4gbmV3IFRhYmxlKGVsZW1lbnQsIHdpZHRoLCBoZWlnaHQsIG9wdGlvbnMpO1xufVxuIl0sIm5hbWVzIjpbInQiLCJkIiwiZSIsInIiLCJuIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJjcmVhdGVUYWJsZVJlbmRlciIsIkQiLCJkZWZhdWx0IiwiTCIsImV4cHIyeHkiLCJhIiwieHkyZXhwciIsImwiLCJjaGFyQXQiLCJsZW5ndGgiLCJpIiwicHVzaCIsInBhcnNlSW50IiwicmV2ZXJzZSIsImpvaW4iLCJjaGFyQ29kZUF0IiwidG9VcHBlckNhc2UiLCJjb25jYXQiLCJ1IiwiVHlwZUVycm9yIiwidGhpcyIsInN0YXJ0Um93Iiwic3RhcnRDb2wiLCJlbmRSb3ciLCJlbmRDb2wiLCJrZXkiLCJjb250YWluc1JvdyIsImNvbnRhaW5zQ29sIiwiZWFjaFJvdyIsImVhY2hDb2wiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsInMiLCJjIiwiaCIsImYiLCJNYXAiLCJyYW5nZSIsIngiLCJ5Iiwicm93SGVpZ2h0IiwiY29sV2lkdGgiLCJyb3dNYXAiLCJzZXQiLCJoZWlnaHQiLCJjb2xNYXAiLCJ3aWR0aCIsIkFycmF5IiwidiIsInRhcmdldCIsImdldENvbnRleHQiLCJFcnJvciIsIl9jdHgiLCJfc2NhbGUiLCJfdGFyZ2V0Iiwic3R5bGUiLCJ3aW5kb3ciLCJkZXZpY2VQaXhlbFJhdGlvIiwiTWF0aCIsImZsb29yIiwic2NhbGUiLCJlbnRyaWVzIiwiZm9yRWFjaCIsImlzQXJyYXkiLCJpdGVyYXRvciIsIm5leHQiLCJkb25lIiwicmV0dXJuIiwidG9TdHJpbmciLCJzbGljZSIsImNvbnN0cnVjdG9yIiwibmFtZSIsImZyb20iLCJ0ZXN0IiwibWVhc3VyZVRleHQiLCJhdHRyIiwibGluZVdpZHRoIiwic3Ryb2tlU3R5bGUiLCJjb2xvciIsInR5cGUiLCJzZXRMaW5lRGFzaCIsIm1vdmVUbyIsImxpbmVUbyIsInN0cm9rZSIsImNsZWFyUmVjdCIsImZpbGxSZWN0Iiwic3Ryb2tlUmVjdCIsImZpbGxUZXh0Iiwic3Ryb2tlVGV4dCIsImdldExpbmVEYXNoIiwiY3JlYXRlTGluZWFyR3JhZGllbnQiLCJjcmVhdGVSYWRpYWxHcmFkaWVudCIsImNyZWF0ZVBhdHRlcm4iLCJiZWdpblBhdGgiLCJjbG9zZVBhdGgiLCJiZXppZXJDdXJ2ZVRvIiwicXVhZHJhdGljQ3VydmVUbyIsImFyYyIsImFyY1RvIiwiZWxsaXBzZSIsInJlY3QiLCJmaWxsIiwiY2xpcCIsImlzUG9pbnRJblBhdGgiLCJpc1BvaW50SW5TdHJva2UiLCJnZXRUcmFuc2Zvcm0iLCJyb3RhdGUiLCJ0cmFuc2xhdGUiLCJzZXRUcmFuc2Zvcm0iLCJkcmF3SW1hZ2UiLCJjcmVhdGVJbWFnZURhdGEiLCJnZXRJbWFnZURhdGEiLCJwdXRJbWFnZURhdGEiLCJzYXZlIiwicmVzdG9yZSIsInciLCJnIiwicCIsImIiLCJfIiwibSIsImtleXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJmaWx0ZXIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJhcHBseSIsImsiLCJhcmd1bWVudHMiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwiZGVmaW5lUHJvcGVydGllcyIsIkMiLCJTIiwiYm9yZGVyIiwiZm9udFNpemUiLCJmb250TmFtZSIsImJvbGQiLCJpdGFsaWMiLCJiZ2NvbG9yIiwiYWxpZ24iLCJ2YWxpZ24iLCJ1bmRlcmxpbmUiLCJzdHJpa2V0aHJvdWdoIiwidGV4dHdyYXAiLCJwYWRkaW5nIiwidG9wIiwicmlnaHQiLCJib3R0b20iLCJsZWZ0IiwibGluZSIsInRleHRBbGlnbiIsInRleHRCYXNlbGluZSIsImZvbnQiLCJmaWxsU3R5bGUiLCJQSSIsIk8iLCJSIiwiaiIsIlAiLCJUIiwiQSIsInNwbGl0IiwiSSIsIkgiLCJtZWFzdXJlVGV4dFdpZHRoIiwibGVuIiwic3RhcnQiLCJzdWJzdHIiLCJFIiwiTSIsImFzc2lnbiIsImVhY2giLCJpbnRlcnNlY3RzIiwiX2NlbGwiLCJfY2VsbFN0eWxlIiwiX2xpbmVTdHlsZSIsIl9zdHlsZXMiLCJfbWVyZ2VzIiwiX3JvdyIsIl9jb2wiLCJfcm93SGVhZGVyIiwiY2VsbCIsIm1lcmdlcyIsImNvbHMiLCJfaGVhZGVyQ2VsbFN0eWxlIiwiX2hlYWRlckxpbmVTdHlsZSIsIl9jb2xIZWFkZXIiLCJyb3dzIiwiX2ZyZWV6ZSIsImhpZGUiLCJfcm93SGVpZ2h0IiwiX2NvbFdpZHRoIiwiX3N0YXJ0Um93IiwiX3N0YXJ0Q29sIiwiX3Jvd3MiLCJfY29scyIsImNyZWF0ZSIsIl9zY3JvbGxSb3dzIiwiX3Njcm9sbENvbHMiLCJfaGVpZ2h0IiwiX3dpZHRoIiwiYXJlYXMiLCJoZWFkZXJBcmVhcyIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIl92aWV3cG9ydCIsInNpemUiLCJfZnJlZXplTGluZVN0eWxlIiwibW9kdWxlIiwiZXhwb3J0cyIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsInVuZGVmaW5lZCIsIl9fd2VicGFja19tb2R1bGVzX18iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZGVmaW5pdGlvbiIsIm9iaiIsInByb3AiLCJzdW0iLCJtaW4iLCJtYXgiLCJnZXR2IiwidG90YWwiLCJjb2wiLCJpbmRleCIsImNvbHNXaWR0aCIsImRhdGEiLCJyb3ciLCJyb3dzSGVpZ2h0IiwiY3JlYXRlRnJhZ21lbnQiLCJmcmFnbWVudCIsImNyZWF0ZURvY3VtZW50RnJhZ21lbnQiLCJub2RlcyIsIm5vZGUiLCJubm9kZSIsIkVsZW1lbnQiLCJjcmVhdGVUZXh0Tm9kZSIsImFwcGVuZENoaWxkIiwidGFnIiwiY2xhc3NOYW1lIiwiTm9kZSIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc0xpc3QiLCJhZGQiLCJfZGF0YSIsImV2ZW50TmFtZSIsImhhbmRsZXIiLCJldnROYW1lIiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2dCIsInN0b3BQcm9wYWdhdGlvbiIsInByZXZlbnREZWZhdWx0Iiwic2V0QXR0cmlidXRlIiwiZ2V0QXR0cmlidXRlIiwic2V0UHJvcGVydHkiLCJnZXRQcm9wZXJ0eVZhbHVlIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwiY3NzIiwic2Nyb2xsTGVmdCIsInNjcm9sbFRvcCIsImFmdGVyIiwiYmVmb3JlIiwiYXBwZW5kIiwicmVtb3ZlQ2hpbGQiLCJzY3JvbGxUbyIsIm9sZFZhbHVlIiwiZ2V0VmFsdWUiLCJzY3JvbGwiLCJpbmRleGVzIiwibmV3VmFsdWUiLCJjaGFuZ2VkIiwic3RlcCIsImVuZCIsIlNjcm9sbCIsIl92YWx1ZSIsInR5cGVDc3NLZXlzIiwidmVydGljYWwiLCJob3Jpem9udGFsIiwiU2Nyb2xsYmFyIiwiX3R5cGUiLCJfY29udGVudCIsIm9uIiwiX2NoYW5nZSIsInNjcm9sbHkiLCJzY3JvbGx4IiwiY29udGVudFZhbHVlIiwiY3NzS2V5Iiwic2hvdyIsIlRhYmxlIiwiZWxlbWVudCIsIm9wdGlvbnMiLCJjb250YWluZXIiLCJfY29udGFpbmVyIiwiY2VsbFN0eWxlIiwiY2FudmFzRWxlbWVudCIsIl9yZW5kZXIiLCJUYWJsZVJlbmRlciIsInNjcm9sbGFibGUiLCJfdlNjcm9sbGJhciIsImNoYW5nZSIsInJlbmRlciIsIl9oU2Nyb2xsYmFyIiwidGFibGVSZXNpemVTY3JvbGxiYXJzIiwiY29sSGVhZGVyIiwicm93SGVhZGVyIiwiZnJlZXplIiwic3R5bGVzIiwicm93SW5kZXgiLCJjb2xJbmRleCIsImNlbGxzIiwiY29uc29sZSIsImxvZyIsInJlc2l6ZSIsImNyZWF0ZVRhYmxlIl0sInNvdXJjZVJvb3QiOiIifQ==